openapi: "3.0.1"
info:
  title: "application"
  version: "a"
servers:
- url: "{server}/prweb/api/application/v2"
  description: "Default Application"
  variables:
    server:
      default: "https://pega.acme.local"
- url: "{server}/prweb/app/{alias}/api/application/v2"
  description: "Specific Application"
  variables:
    server:
      default: "https://pega.acme.local"
    alias:
      enum:
      - "production-approvals"
      - "amp"
      - "approval-hub"
      default: "approval-hub"
security:
- Password: []
- ClientCredentials: []
- AuthCode: []
tags:
- name: "Assignment"
- name: "Attachment"
- name: "Case"
- name: "Document"
- name: "Follower"
- name: "Participants"
- name: "Related case"
- name: "Tag"
- name: "Case type"
- name: "Page"
- name: "Data"
- name: "Social"
- name: "Recents"
- name: "List"
- name: "Personalizations"
- name: "User Settings"
paths:
  /assignments/next:
    get:
      tags:
      - "Assignment"
      summary: "Get next assignment details [DX]"
      description: "<p>Get next available assignment for the requestor. &quot;uiResources&quot;\
        \ node in response&nbsp;is not applicable for viewType &quot;none&quot;</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "form - returns the form UI metadata, page - returns the full\
          \ page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          default: "page"
      - name: "pageName"
        in: "query"
        description: "returns UI metadata for given pageName"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "etag holds unique value"
              schema:
                type: "string"
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /assignments/{assignmentID}:
    get:
      tags:
      - "Assignment"
      summary: "Get assignment details [DX]"
      description: "<p>&nbsp;</p>\n\n<p>Retrieves&nbsp;assignment metadata based on\
        \ assignment ID passed.&nbsp;&quot;uiResources&quot; node in response&nbsp;is\
        \ not applicable for viewType &quot;none&quot;</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "form - returns the form UI metadata, page - returns the full\
          \ page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          default: "page"
      - name: "pageName"
        in: "query"
        description: "return view metadata for pagename view"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds ETag unique value"
              schema:
                type: "string"
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /assignments/{assignmentID}/actions/{actionID}:
    get:
      tags:
      - "Assignment"
      summary: "Get action details of an assignment [DX]"
      description: "<p>Opens assignment action based on assignment and action ID.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of the assignment action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "form - returns the form UI metadata, page - returns the full\
          \ page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "page"
          default: "form"
      - name: "excludeAdditionalActions"
        in: "query"
        description: "true - excludes additional actions/assignments from response"
        allowEmptyValue: true
        schema:
          type: "boolean"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "Assignment"
      summary: "Perform assignment action [DX]"
      description: "<p>Posts the current assignment action and gets the next assignment\
        \ action based assignment and action ID.&nbsp;&quot;uiResources&quot; node\
        \ in response&nbsp;is not applicable for viewType &quot;none&quot;</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of the assignment action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "none"
          - "page"
          - "form"
          default: "none"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data to content page"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Specific instructions to update, move, delete or add\
                    \ individual page elements or page list elements"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  description: "Attachment fields info"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          headers:
            location:
              description: "Location of created case resource"
              schema:
                type: "string"
            etag:
              description: "holds the eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPERFORMASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "Precondition failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /assignments/{assignmentID}/actions/{actionID}/refresh:
    patch:
      tags:
      - "Assignment"
      summary: "Refresh assignment action [DX]"
      description: "<p>Posts the content and gets the view data for a given assignment\
        \ based on assginment ID. Response has information of the fields, which are\
        \ affected with content thats changed.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of the assignment action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data to content page"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Specific instructions to update, move, delete or add\
                    \ individual page elements or page list elements"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                contextData:
                  title: "contextData"
                  type: "boolean"
                  description: "A boolean value to fetch contextData or full view\
                    \ response"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZREFRESHACTION"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Unprocessable entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /assignments/{assignmentID}/actions/{actionID}/save:
    patch:
      tags:
      - "Assignment"
      summary: "Save assignment action"
      description: "<p>Saves the assignment action form data</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of the assignment action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data to content page"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Specific instructions to update, move, delete or add\
                    \ individual page elements or page list elements"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  description: "Attachment fields info"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds the eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZSAVEASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "Precondition failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /assignments/{assignmentID}/navigation_steps/previous:
    patch:
      tags:
      - "Assignment"
      summary: "Go back to previous step [DX]"
      description: "<p>Returns the details&nbsp;of the previous step in a flow.&nbsp;Additional\
        \ &quot;navigation&quot; node will be returned under &quot;uiResoruces&quot;\
        \ to build navigation breadcrumb.</p>\n\n<p>&quot;uiResources&quot; node in\
        \ response&nbsp;is not applicable for viewType &quot;none&quot;</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "page"
          - "none"
          default: "form"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPERFORMASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "Precondition failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /assignments/{assignmentID}/navigation_steps/{stepID}:
    patch:
      tags:
      - "Assignment"
      summary: "Jump to the specified step [DX]"
      description: "<p>Jump and return the details of the step based on step ID passed.&nbsp;Additional\
        \ &quot;navigation&quot; node will be returned under &quot;uiResoruces&quot;\
        \ to build navigation breadcrumb.</p>\n\n<p>&quot;uiResources&quot; node in\
        \ response&nbsp;is not applicable for viewType &quot;none&quot;</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "assignmentID"
        in: "path"
        description: "Assignment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "stepID"
        in: "path"
        description: "Navigation step path (SubProcessSF1_ASSIGNMENT66)"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "page"
          - "none"
          default: "form"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds the eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPERFORMASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "Precondition failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Resource Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /attachments/upload:
    post:
      tags:
      - "Attachment"
      summary: "Upload a file to be used as an attachment in a subsequent call"
      description: "<p>Uploads file to pega database or third party storage as configured\
        \ in application</p>"
      responses:
        201:
          description: "Response"
          headers:
            expires:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-UPLOADATTACHMENT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        400:
          description: "Couldn't upload file"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /attachments/{attachmentID}:
    get:
      tags:
      - "Attachment"
      summary: "Get attachment content"
      description: "<p>Downloads attachment content as base 64 encoded string for\
        \ file and plain text for URL</p>"
      parameters:
      - name: "attachmentID"
        in: "path"
        description: "Attachment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "mode"
        in: "query"
        description: "Attachment Stream or String"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "string"
          - "stream"
          default: "string"
      responses:
        200:
          description: "Response"
          headers:
            content-disposition:
              schema:
                type: "string"
            content-type:
              schema:
                type: "string"
            content-transfer-encoding:
              schema:
                type: "string"
          content:
            text/plain:
              schema:
                type: "string"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Not  authorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        424:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Attachment"
      summary: "Delete attachment"
      description: "<p>Delete attachment link to work object and attachment content\
        \ if there are no other references</p>"
      parameters:
      - name: "attachmentID"
        in: "path"
        description: "Attachment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Not authorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        424:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "Attachment"
      summary: "Edit the attachment name and category"
      description: "<p>Accepts name and category as input in request body and updates\
        \ them in the attachment.</p>"
      parameters:
      - name: "attachmentID"
        in: "path"
        description: "Attachment ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  title: "name"
                  type: "string"
                  description: "Attachment Name"
                category:
                  title: "category"
                  type: "string"
                  description: "Attachment Category"
              additionalProperties: false
      responses:
        200:
          description: "Valid Response"
          content:
            text/plain:
              schema:
                type: "string"
        500:
          description: "Internal Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Not Authorised"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/bulk-actions:
    post:
      tags:
      - "Case"
      summary: "Get bulk actions [DX]"
      description: "<p>Gets the bulk actions for the given cases</p>"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - "cases"
              type: "object"
              properties:
                cases:
                  title: "cases"
                  description: "cases"
                  allOf:
                  - $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETBULKACTIONSREQUESTSCHEMA"
              additionalProperties: false
        required: true
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETBULKACTIONS"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases:
    post:
      tags:
      - "Case"
      summary: "Creates new case [DX]"
      description: "<p>Creates&nbsp;a new case based on the passed&nbsp;case class\
        \ and returns details of the first assignment.&nbsp;&quot;uiResources&quot;\
        \ node in response&nbsp;is not applicable for viewType &quot;none&quot;.</p>\n\
        \n<p>Input parameters content and pageInstructions are not valid for caseTypes\
        \ with create stage configuration.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          - "none"
          default: "none"
      - name: "pageName"
        in: "query"
        description: "return view metadata for pagename view"
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data to content page"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Specific instructions to update, move, delete or add\
                    \ individual page elements or page list elements"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
                caseTypeID:
                  title: "caseTypeID"
                  type: "string"
                  description: "Case Type to be created"
                parentCaseID:
                  title: "parentCaseID"
                  type: "string"
                  description: "Parent Case ID"
              additionalProperties: false
      responses:
        201:
          description: "Response"
          headers:
            location:
              description: "Location of created case resource"
              schema:
                type: "string"
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZCREATECASE"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "Case"
      summary: "Perform bulk action [DX]"
      description: "<p>Process bulk action&nbsp;for given cases</p>"
      parameters:
      - name: "actionID"
        in: "query"
        description: "action ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - "cases"
              type: "object"
              properties:
                cases:
                  title: "cases"
                  description: "cases"
                  allOf:
                  - $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETBULKACTIONSREQUESTSCHEMA"
                content:
                  title: "content"
                  description: "content"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "page instructions"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  description: "attachments"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
        required: true
      responses:
        207:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPERFORMBULKACTIONRESPONSESCHEMA"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}:
    get:
      tags:
      - "Case"
      summary: "Get case details [DX]"
      description: "<p>Gets the details of a case based on the case ID passed.&nbsp;</p>\n\
        \n<p>If viewType is none,&nbsp;data.caseInfo.content contains the fields of\
        \ the pyDetails view.</p>\n\n<p>Also, &quot;uiResources&quot; node in response&nbsp;is\
        \ not applicable for viewType none.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), page\
          \ - returns the full page (read only review mode) UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "none"
          - "page"
          default: "none"
      - name: "pageName"
        in: "query"
        description: "return view metadata for pagename view"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETCASEDETAILS"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Not Authorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Case"
      summary: "Delete case in create stage"
      description: "<p>Delete case and associcated instances&nbsp;in create stage</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
        404:
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "no modify access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/actions/{actionID}:
    get:
      tags:
      - "Case"
      summary: "Get case actions details [DX]"
      description: "<p>Retrieves&nbsp;case wide and stage wide local action details\
        \ based on case and action ID passed</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "form - returns the form UI metadata, page - returns the full\
          \ page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          default: "form"
      - name: "excludeAdditionalActions"
        in: "query"
        description: "true - excludes additional actions/assignments from response"
        allowEmptyValue: true
        schema:
          type: "boolean"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "Case"
      summary: "Perform case action [DX]"
      description: "<p>Posts the case and stage wide local action and gets the next\
        \ action.&nbsp;&quot;uiResources&quot; node in response&nbsp;is not applicable\
        \ for viewType &quot;none&quot;</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          - "none"
          default: "none"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                attachments:
                  title: "attachments"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          headers:
            location:
              description: "Location of created case resource"
              schema:
                type: "string"
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPERFORMASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "Precondition failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/actions/{actionID}/refresh:
    patch:
      tags:
      - "Case"
      summary: "Refresh case action [DX]"
      description: "<p>Posts the content and gets the view data for a given case based\
        \ on case ID. Response has information of the fields, which are affected with\
        \ content thats changed.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID of the current case, for which refresh happens"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        description: "Name of the case action"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data to content page"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Specific instructions to update, move, delete or add\
                    \ individual page elements or page list elements"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                contextData:
                  title: "contextData"
                  type: "boolean"
                  description: "A boolean value to fetch contextData or full view\
                    \ response"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZREFRESHACTION"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Unprocessable entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/ancestors:
    get:
      tags:
      - "Case"
      summary: "Get ancestor case hierarchy"
      description: "<p>Retrieves ancestor hierarchy case list for the case ID passed\
        \ in.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "ID of the work case"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZANCESTORHIERARHY"
        404:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/attachment_categories:
    get:
      tags:
      - "Attachment"
      summary: "Get attachment categories"
      description: "<p>Retrieves list of attachment categories&nbsp;of a&nbsp;case\
        \ based on caseID passed</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        description: "attachment type (File or URL, case insensitive)"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-ATTACHMENTCATEGORIES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/attachments:
    get:
      tags:
      - "Attachment"
      summary: "Get attachments for a case"
      description: "<p>Retrieves list of attachments of a&nbsp;case based on caseID\
        \ passed</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "includeThumbnails"
        in: "query"
        description: "include attachment thumbnail info"
        allowEmptyValue: true
        schema:
          type: "boolean"
      responses:
        200:
          description: "Response"
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-ATTACHMENTLIST.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Attachment"
      summary: "Add attachments"
      description: "<p>Attaches&nbsp;uploaded file to a context. &quot;attachmentFieldName&quot;\
        \ property in the request body will be ignored.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                attachments:
                  title: "attachments"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API"
              additionalProperties: false
      responses:
        201:
          description: ""
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Invalid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/descendants:
    get:
      tags:
      - "Case"
      summary: "Get descendant case hierarchy"
      description: "<p>Retrieve the descendant case hierarchy list for the given case\
        \ ID. Includes assignment and action information for each case.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID to get descendants"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZDESCENDANTHIERARCHY"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Forbidden Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Resource not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/documents/{documentID}:
    delete:
      tags:
      - "Document"
      summary: "Removes document linked to case"
      description: "<p>Removes document linked to case</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "documentID"
        in: "path"
        description: "Document ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/followers:
    get:
      tags:
      - "Follower"
      summary: "Get case followers"
      description: "<p>Get the list of all the Case Followers</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "ID of the work case"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-FOLLOWER.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Follower"
      summary: "Add followers"
      description: "<p>Add multiple followers to a work object.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "ID of the work case"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                users:
                  title: "users"
                  allOf:
                  - $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZADDFOLLOWERS"
              additionalProperties: false
      responses:
        207:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZADDFOLLOWERSRESPONSESCHEMA"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/followers/{followerID}:
    delete:
      tags:
      - "Follower"
      summary: "Delete follower"
      description: "<p>Removes follower association between case&nbsp;and user</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "followerID"
        in: "path"
        description: "Follower ID / User ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/participant_roles:
    get:
      tags:
      - "Participants"
      summary: "Get Case Participant Roles"
      description: "<p>Retrieve list of participant roles</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPARTICIPANTROLE"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/participant_roles/{participant_role_ID}:
    get:
      tags:
      - "Participants"
      summary: "Get Participant Role Details"
      description: "<p>Get Participant Role Details</p>"
      parameters:
      - name: "caseID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "participant_role_ID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "none"
          default: "form"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPARTICIPANTROLEDETAIL"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/participants:
    get:
      tags:
      - "Participants"
      summary: "Get all participants V2"
      description: "<p>Gets the list of participants&nbsp;based on the case ID passed.&nbsp;</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETALLLCASEPARTICIPANTS"
        404:
          description: "Resource Not Found Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Participants"
      summary: "Create Participant"
      description: "<p>Create Participant</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "View Type"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "none"
          default: "form"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - "content"
              - "participantRoleID"
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.DATA-PARTY.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Page Instructions"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                participantRoleID:
                  title: "participantRoleID"
                  type: "string"
                  description: "Participant Role ID"
              additionalProperties: false
        required: true
      responses:
        201:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPARTICIPANTROLEDETAIL"
        500:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/participants/{participantID}:
    get:
      tags:
      - "Participants"
      summary: "Get Participant"
      description: "<p>Get Participant</p>"
      parameters:
      - name: "caseID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "participantID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "none"
          default: "form"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPARTICIPANTROLEDETAIL"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Participants"
      summary: "Delete Participant"
      description: "<p>Delete Participant</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "participantID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          headers:
            etag:
              schema:
                type: "string"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "Participants"
      summary: "Update participant"
      description: "<p>Update participant</p>"
      parameters:
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "participantID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "form"
          - "none"
          default: "form"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "content"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.DATA-PARTY.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          headers:
            etag:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZPARTICIPANTROLEDETAIL"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/processes/{processID}:
    post:
      tags:
      - "Case"
      summary: "Add optional process [DX]"
      description: "<p>Add&nbsp;stage or case-wide optional process and&nbsp;returns\
        \ details of the next assignment in the process.</p>\n\n<p>&quot;uiResources&quot;\
        \ node in response&nbsp;is not applicable for viewType &quot;none&quot;.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "processID"
        in: "path"
        description: "Process ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          - "none"
          default: "none"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETASSIGNMENT"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Precondition required"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "Precondition failed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/related_cases:
    get:
      tags:
      - "Related case"
      summary: "Get related cases"
      description: "<p>Retrieves list of related cases of a&nbsp;case based on case\
        \ key&nbsp;passed.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID to which other case instances will be related"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETRELATEDCASES"
        500:
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Access issue"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Case not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Related case"
      summary: "Relate cases"
      description: "<p>Automation rule used to relate a given set of case instances\
        \ or a single case instance for a particular case.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID to which other case instances will be related"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                cases:
                  title: "cases"
                  description: "List of cases instances to be related"
                  allOf:
                  - $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZADDRELATEDCASES"
              additionalProperties: false
      responses:
        500:
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        207:
          description: "Response data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZMULTISTATUSRESPONSESCHEMA"
        400:
          description: "Invalid data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Access denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not available"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/related_cases/{related_caseID}:
    delete:
      tags:
      - "Related case"
      summary: "Delete a related case"
      description: "<p>Removes related work association between two cases</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "related_caseID"
        in: "path"
        description: "Related Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/stages:
    get:
      tags:
      - "Case"
      summary: "Get case stages list"
      description: "<p>Retrieve the stages&nbsp;list for the given case ID.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Reponse"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETSTAGES"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Forbidden request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Resource not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/stages/next:
    post:
      tags:
      - "Case"
      summary: "Change to next stage [DX]"
      description: "<p>Change to the next stage of a case.&nbsp;&quot;uiResources&quot;\
        \ node in response&nbsp;is not applicable for viewType &quot;none&quot;.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "if-match"
        in: "header"
        description: "holds ETag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "none"
          - "page"
          - "form"
          default: "none"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZCHANGESTAGE"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "pre-condition fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "Prerequisite not met"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/stages/{stageID}:
    put:
      tags:
      - "Case"
      summary: "Change to specified stage [DX]"
      description: "<p>Change to a specified stage of a case&nbsp;based on stageID\
        \ passed.&nbsp;&quot;uiResources&quot; node in response&nbsp;is not applicable\
        \ for viewType &quot;none&quot;.</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "if-match"
        in: "header"
        description: "holds eTag unique value"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID to act on"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "stageID"
        in: "path"
        description: "Stage ID to progress"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), form\
          \ - returns the form UI metadata, page - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "page"
          - "form"
          - "none"
          default: "none"
      responses:
        200:
          description: "Response"
          headers:
            etag:
              description: "holds eTag unique value"
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZCHANGESTAGE"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        412:
          description: "precondition fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        428:
          description: "prerequisite not met"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/tags:
    get:
      tags:
      - "Tag"
      summary: "Get list of tags"
      description: "<p>Get tags associated to a case</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-TAG.true.PEGA_API.PZGETTAGSJSONRESPONSE"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Tag"
      summary: "Add multiple tags to a case"
      description: "<p>Add multiple tags to a work object.</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                tags:
                  title: "tags"
                  description: "Contains list of tags"
                  allOf:
                  - $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZTAGCASEREQUESTSCHEMA"
              additionalProperties: false
      responses:
        207:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZMULTISTATUSRESPONSESCHEMA"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/tags/{tagID}:
    delete:
      tags:
      - "Tag"
      summary: "Delete tag"
      description: "<p>Delete tag for a case&nbsp;</p>"
      parameters:
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "tagID"
        in: "path"
        description: "Tag ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                type: "string"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/updates:
    delete:
      tags:
      - "Case"
      summary: "Release lock"
      description: "<p>When pessimistic locking is in use, releases lock on a case\
        \ and cleans up any cached or pending updates.&nbsp; i.e. &ldquo;cancel button&rdquo;</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewType"
        in: "query"
        description: "none - returns no view metadata or fields (of the view), page\
          \ - returns the full page UI metadata"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "none"
          - "page"
          default: "none"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETCASEDETAILS"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/views/{viewID}:
    get:
      tags:
      - "Case"
      summary: "Get view details for a case [DX]"
      description: "<p>Retrieves&nbsp;view metadata for a given case based on case\
        \ ID and view Name</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewID"
        in: "path"
        description: "Name of view"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETCASEDETAILS"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /cases/{caseID}/views/{viewID}/refresh:
    patch:
      tags:
      - "Case"
      summary: "Get view details for a case [DX]"
      description: "<p>Retrieves&nbsp;view metadata for a given case based on case\
        \ ID and view Name</p>"
      parameters:
      - name: "x-origin-channel"
        in: "header"
        description: "Origin of this service. E.g. - Web, Mobile etc."
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "caseID"
        in: "path"
        description: "Case ID of the current case"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "viewID"
        in: "path"
        description: "Name of the view for which refresh happens"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                content:
                  title: "content"
                  description: "Post data to content page"
                  allOf:
                  - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API"
                pageInstructions:
                  title: "pageInstructions"
                  type: "array"
                  description: "Specific instructions to update, move, delete or add\
                    \ individual page elements or page list elements"
                  items:
                    $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API"
                interestPage:
                  title: "interestPage"
                  type: "string"
                  description: "Data/Case reference page"
              additionalProperties: false
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETCASEDETAILS"
        404:
          description: "Resource not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        423:
          description: "Locked"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation Fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /casetypes:
    get:
      tags:
      - "Case type"
      summary: "Get list of casetypes for your application"
      description: "<p>Retrieves list of casetypes for your application</p>"
      responses:
        200:
          description: "Reponse"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-CASETYPES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /casetypes/{caseTypeID}/actions/{actionID}:
    get:
      tags:
      - "Case type"
      summary: "Get bulk action details for this casetype"
      description: "<p>Retrieves&nbsp;case wide local action details based on class\
        \ name and action ID passed for the bulk processing</p>"
      parameters:
      - name: "caseTypeID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "actionID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETBULKCASEDETAILS"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /channels/{channelID}:
    get:
      tags:
      - "Page"
      summary: "Get channel details [DX]"
      description: "<p>To retrieve view metadata based on channel id passed as parameter</p>"
      parameters:
      - name: "channelID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Resopnse"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-BODY.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Resource Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data_objects:
    get:
      tags:
      - "Data"
      summary: "Get data objects"
      description: "<p>Get a list of data objects&nbsp;&nbsp;&nbsp;&nbsp;</p>"
      parameters:
      - name: "type"
        in: "query"
        description: "Data object type"
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "data"
          - "case"
      responses:
        200:
          description: "List of application data objects"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-APPLICATION-DATAOBJECTS.true.PEGA_API.PZMAPRESPONSEBODY"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data_pages:
    get:
      tags:
      - "Data"
      summary: "Get data pages"
      description: "<p>Get a list of data pages&nbsp;</p>"
      parameters:
      - name: "type"
        in: "query"
        description: "Data page request type"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
          enum:
          - "all"
          - "explorable"
      responses:
        200:
          description: "List of application data pages"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-APPLICATION-DATAPAGES.true.PEGA_API.PZMAPRESPONSEBODY"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data/{data_view_ID}:
    put:
      tags:
      - "Data"
      summary: "Update Data Record"
      description: "<p>Overrides a data record based on the conditional save plan\
        \ configured for a savable Data Page</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "ID of savable Data Page"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY"
        required: true
      responses:
        200:
          description: "Response Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal Execution Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Data"
      summary: "Create data record"
      description: "<p>Creates a data record based on the conditional save plan configured\
        \ for a savable Data Page</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "ID of savable Data Page"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY"
        required: true
      responses:
        200:
          description: "Response Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Data"
      summary: "Delete data record"
      description: "<p>Deletes a data record based on the conditional save plan configured\
        \ for a savable Data Page</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "ID of savable Data Page"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "dataViewParameters"
        in: "query"
        description: "Primary key(s) as input to uniquely identify a data record"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Validation failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "Data"
      summary: "Patch data record"
      description: "<p>Updates a data record based on the conditional save plan configured\
        \ for a savable Data Page<br />\nNote - Not supported for PEGA System of records.</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "ID of savable Data Page"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Mapping request data"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY"
        required: true
      responses:
        200:
          description: "Response Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Validation failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data_views/{data_view_ID}:
    get:
      tags:
      - "Data"
      summary: "Get single page data view"
      description: "<p>Get page type data pages</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "Data view ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "dataViewParameters"
        in: "query"
        description: "data page parameters as json string"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-DATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Data"
      summary: "Get list data view"
      description: "<p>Explore or query a list data view&nbsp;&nbsp;&nbsp;&nbsp;</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "Data view ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-REQUEST.true.PEGA_API.PZMAPREQUESTBODY"
      responses:
        200:
          description: "Response data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-DATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        599:
          description: "time out failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data_views/{data_view_ID}/count:
    post:
      tags:
      - "Data"
      summary: "Get total result count"
      description: "<p>Explore or query a data view&nbsp;total&nbsp;result&nbsp;count&nbsp;\
        \ &nbsp;&nbsp;</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "Data view ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-REQUEST-COUNT.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      responses:
        200:
          description: "Response data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-RESULTCOUNT.true.PEGA_API.PZTRANSLATEVIEWCOUNTPAGETOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        408:
          description: "Time out failure for the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data_views/{data_view_ID}/metadata:
    get:
      tags:
      - "Data"
      summary: "Get data view metadata"
      description: "<p>Get data view metadata which includes data view parameters\
        \ and list of queryable fields</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "Data View ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Dataview metadata"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-METADATA.true.PEGA_API.PZMAPMETADATARESPONSE"
        400:
          description: "Invalid inputs in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Lack of permission to access the dataview"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Dataview is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /data_views/{data_view_ID}/views/{view_ID}:
    post:
      tags:
      - "Data"
      summary: "Get data with view metadata"
      description: "<p>Get single data record and view metadata to render the data\
        \ record</p>"
      parameters:
      - name: "data_view_ID"
        in: "path"
        description: "Data view ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "view_ID"
        in: "path"
        description: "View ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAVIEWRUNTIME-REQUEST.true.PEGA_API"
        required: true
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-DATAVIEWRUNTIME-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSONDEFAULTNULL"
        500:
          description: "Execution Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid Inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "Insufficient security"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Resource not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        422:
          description: "Validation fail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /documents/{documentID}:
    get:
      tags:
      - "Document"
      summary: "Get Document Content"
      description: "<p>Downloads document content as base 64 encoded string&nbsp;</p>"
      parameters:
      - name: "documentID"
        in: "path"
        description: "Document ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            content-disposition:
              schema:
                type: "string"
            content-type:
              schema:
                type: "string"
            content-transfer-encoding:
              schema:
                type: "string"
          content:
            text/plain:
              schema:
                type: "string"
        500:
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        424:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /feeds/{feedID}:
    get:
      tags:
      - "Social"
      summary: "Get feed list view response"
      description: "<p>Get Pulse feed response&nbsp;&nbsp;&nbsp;&nbsp;</p>"
      parameters:
      - name: "feedID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "filterFor"
        in: "query"
        description: "contextID or userID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "olderThan"
        in: "query"
        description: "Only return entries older than this date time"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Max entries to return"
        allowEmptyValue: true
        schema:
          type: "integer"
          format: "int32"
      - name: "feedClass"
        in: "query"
        description: "Pulse feed rule class"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "filterBy"
        in: "query"
        description: "Feed source list with comma seperator"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZFEEDRESPONSE"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
  /insight/{insightID}:
    get:
      tags:
      - "Page"
      summary: "Get page details [DX]"
      description: "<ul>\n\t<li>Retrieves the portal details of the given insight&nbsp;Id.</li>\n\
        \t<li>&quot;context_data&quot; under &quot;uiResources&quot; is always empty\
        \ string for getPortals.</li>\n</ul>"
      parameters:
      - name: "insightID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETPAGE"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Page"
      summary: "Get page details with data context [DX]"
      description: "<ul>\n\t<li>Retrieves the page details with the given page Id\
        \ and its corresponding context data</li>\n</ul>"
      parameters:
      - name: "insightID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request containing dataContext and dataContextParameters info"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PAGE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY"
        required: true
      responses:
        200:
          description: "Page response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETPAGE"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /mentions:
    get:
      tags:
      - "Social"
      summary: "Get mentions list"
      description: "<p>Loads mentions for the mentionstype and search string passed</p>"
      parameters:
      - name: "context"
        in: "query"
        description: "Context of pulse gadget"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "mentionsType"
        in: "query"
        description: "Mentions type to search for"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "searchFor"
        in: "query"
        description: "Search string"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "listSize"
        in: "query"
        description: "List Size to be fetched"
        allowEmptyValue: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MENTIONSLIST.true.PEGA_API.PZSETMENTIONSRESPONSE"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /mention_types:
    get:
      tags:
      - "Social"
      summary: "Get mention types"
      description: "<p>Gets mention types&nbsp;</p>"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETMENTIONTYPES"
  /messages:
    get:
      tags:
      - "Social"
      summary: "Get messages for the context passed"
      description: "<p>Get Pulse Messages for the context passed</p>"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "Max entries to return"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "olderThan"
        in: "query"
        description: "Only return entries older than this date time"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "filterBy"
        in: "query"
        description: "Feed source list with comma seperator"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "filterFor"
        in: "query"
        description: "contextID or userID"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          headers:
            cache-control:
              description: "Client cache control mechanism - disable it"
              schema:
                type: "string"
                enum:
                - "no-cache"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Social"
      summary: "Add message to the context passed"
      description: "<p>Creates post from Rest</p>"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-POSTDATA.true.PEGA_API"
        required: true
      responses:
        201:
          description: "response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API.PYGETRESPONSEFORADDPOST"
        500:
          description: "Response"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Response"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /messages/{messageID}:
    get:
      tags:
      - "Social"
      summary: "Get message details"
      description: "<p>Gets message details for the message id passed</p>"
      parameters:
      - name: "messageID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        404:
          description: "Pulse Message Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    put:
      tags:
      - "Social"
      summary: "Edit message"
      description: "<p>Updates message details for the message id passed</p>"
      parameters:
      - name: "messageID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-POSTDATA-EDIT.true.PEGA_API"
        required: true
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: "No access"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Social"
      summary: "Deletes message"
      description: "<p>Deletes message</p>"
      parameters:
      - name: "messageID"
        in: "path"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /messages/{messageID}/likes:
    get:
      tags:
      - "Social"
      summary: "Get Likes for a message"
      description: "<p>Gets the likes for a message.</p>"
      parameters:
      - name: "messageID"
        in: "path"
        description: "message ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-LIKE.true.PEGA_API.PZGETLIKESJSONRESPONSE"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Social"
      summary: "Add a like to a message"
      description: "<p>Adds like on a message for the current operator</p>"
      parameters:
      - name: "messageID"
        in: "path"
        description: "message ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Success"
          content:
            text/plain:
              schema:
                type: "string"
                enum:
                - "Success"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Social"
      summary: "Remove a like from a message"
      description: "<p>Removes&nbsp;like on a message for the current operator</p>"
      parameters:
      - name: "messageID"
        in: "path"
        description: "message ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Success"
          content:
            text/plain:
              schema:
                type: "string"
                enum:
                - "Success"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /pages/{pageID}:
    get:
      tags:
      - "Page"
      summary: "Get page details [DX]"
      description: "<ul>\n\t<li>Retrieves the portal details of the given page Id.</li>\n\
        \t<li>&quot;context_data&quot; under &quot;uiResources&quot; is always empty\
        \ string for getPortals.</li>\n</ul>"
      parameters:
      - name: "pageID"
        in: "path"
        description: "ID of the Page"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "pageClass"
        in: "query"
        description: "Class in which the page lives in"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETPAGE"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Page"
      summary: "Get page details with data context [DX]"
      description: "<ul>\n\t<li>Retrieves the page details with the given page Id\
        \ and its corresponding context data</li>\n</ul>"
      parameters:
      - name: "pageID"
        in: "path"
        description: "ID of the Page"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request containing dataContext and dataContextParameters info"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PAGE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY"
        required: true
      responses:
        200:
          description: "Page response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETPAGE"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /portals/{portalID}:
    get:
      tags:
      - "Page"
      summary: "Get portal details [DX]"
      description: "<ul>\n\t<li>Retrieves the portal details of the given portal Id&nbsp;assigned\
        \ to authenticated user.</li>\n\t<li>&quot;data&quot; key will be returned\
        \ as well if any pages are referred in the portal.</li>\n\t<li>&quot;context_data&quot;\
        \ under &quot;uiResources&quot; is always empty string for getPortals.</li>\n\
        </ul>\n\n<p>&nbsp;</p>"
      parameters:
      - name: "portalID"
        in: "path"
        description: "Portal name"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZGETPORTAL"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        404:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /recents:
    get:
      tags:
      - "Recents"
      summary: "Get recents"
      description: "<p>Get recents of the default application for the operator</p>"
      parameters:
      - name: "maxResultsToFetch"
        in: "query"
        description: "maximum recents items to fetch, if the values is <=0, then all\
          \ the recents will be returned"
        allowEmptyValue: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Recents Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZRECENTSINFO"
        400:
          description: "Automation Errors"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /suggested_tags:
    get:
      tags:
      - "Social"
      summary: "Get suggested tags and recent tags"
      description: "<p>Gets suggested for given context and recents tags by user</p>"
      parameters:
      - name: "context"
        in: "query"
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-SUGGESTEDTAGS.true.PEGA_API.PZSETSUGGESTEDTAGSRESPONSE"
  /tags:
    get:
      tags:
      - "Social"
      summary: "Get tags for the search string passed"
      description: "<p>Retuns matched tags for the searchString passed</p>"
      parameters:
      - name: "searchFor"
        in: "query"
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "listSize"
        in: "query"
        allowEmptyValue: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-TAGS.true.PEGA_API.PZSETTAGSRESPONSE"
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /ui_lists/{viewName}/move:
    patch:
      tags:
      - "List"
      summary: "Move records within a list"
      description: "<p>Used to update the order of records in a list. The API when\
        \ invoked, has a request body which contains the context, sourceID, destination\
        \ ID, listClass details which can be used by the application developer in\
        \ the activity - &quot;pyMoveRecords&quot;.</p>"
      parameters:
      - name: "viewName"
        in: "path"
        description: "list view Name"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "request body content"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZMOVERECORDSREQUESTSCHEMA"
        required: true
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZMOVERECORDSRESPONSESCHEMA"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        500:
          description: "Execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /ui_lists/{ui_list_ID}/personalizations/{personalizationID}:
    put:
      tags:
      - "Personalizations"
      summary: "Update personalization for a list component"
      description: "<p>Update personalization for a list component</p>"
      parameters:
      - name: "ui_list_ID"
        in: "path"
        description: "UI List ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "personalizationID"
        in: "path"
        description: "personalization ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request page"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-REQUEST.true.PEGA_API"
        required: true
      responses:
        500:
          description: "Execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        200:
          description: "Success"
          content:
            text/plain:
              schema:
                type: "string"
                enum:
                - "Success"
        404:
          description: "Resource not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    delete:
      tags:
      - "Personalizations"
      summary: "Remove personalization on a list component"
      description: "<p>Remove personalization on a list component</p>"
      parameters:
      - name: "ui_list_ID"
        in: "path"
        description: "UI List ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      - name: "personalizationID"
        in: "path"
        description: "personalization ID"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        500:
          description: "Automation error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        404:
          description: "Resource not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        200:
          description: "Success"
          content:
            text/plain:
              schema:
                type: "string"
                enum:
                - "Success"
  /ui_lists/{ui_list_ID}/personalizations:
    get:
      tags:
      - "Personalizations"
      summary: "Get all personalizations for a list component"
      description: "<p>Get all personalizations for a list component</p>"
      parameters:
      - name: "ui_list_ID"
        in: "path"
        description: "ID of List component"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      responses:
        200:
          description: "Response data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        500:
          description: "Internal execution error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    post:
      tags:
      - "Personalizations"
      summary: "Create a personalization on a list component"
      description: "<p>Create a personalization on a list component</p>"
      parameters:
      - name: "ui_list_ID"
        in: "path"
        description: "ID of List component"
        required: true
        allowEmptyValue: true
        schema:
          type: "string"
      requestBody:
        description: "Request data"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-REQUEST.true.PEGA_API"
        required: true
      responses:
        200:
          description: "personalization ID"
          content:
            text/plain:
              schema:
                type: "string"
        500:
          description: "Automation errors"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid inputs"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
  /user_settings:
    get:
      tags:
      - "User Settings"
      summary: "Get user settings"
      description: "<p>Get user settings&nbsp;for the operator</p>"
      responses:
        200:
          description: "User Setting Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZUPDATEUSERSETTINGSRESPONSESCHEMA"
        500:
          description: "Automation errors"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
    patch:
      tags:
      - "User Settings"
      summary: "Set user settings"
      description: "<p>Update user settings for operator</p>"
      requestBody:
        description: "input payload"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZUPDATEUSERSETTINGSREQUESTSCHEMA"
        required: true
      responses:
        200:
          description: "user setting response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SCHEMA_FILE_WEBWB_PZUPDATEUSERSETTINGSRESPONSESCHEMA"
        500:
          description: "Automation errors"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
        400:
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON"
components:
  schemas:
    RULE-OBJ-CLASS.DATA-PARTY.true.PEGA_API:
      title: "Party Information"
      type: "object"
      properties:
        pxCommitDateTime:
          title: "Commit DateTime"
          type: "string"
          format: "date-time"
          readOnly: true
        pxCreateDateTime:
          title: "Create Date/Time"
          type: "string"
          description: "Date and time when this instance was created."
          format: "date-time"
          readOnly: true
        pxCreateOperator:
          title: "Create Operator"
          type: "string"
          description: "Operator who created this instance"
          readOnly: true
        pxCreateOpName:
          title: "Create operator name"
          type: "string"
          description: "Defines the create operator"
          readOnly: true
        pxCreateSystemID:
          title: "Create System ID"
          type: "string"
          description: "Date and time when this instance was created."
          readOnly: true
        pxSaveDateTime:
          title: "Save DateTime"
          type: "string"
          format: "date-time"
          readOnly: true
        pxUpdateOperator:
          title: "Update Operator"
          type: "string"
          description: "Last operator who modified this instance"
          readOnly: true
        pxUpdateOpName:
          title: "Update operator name"
          type: "string"
          description: "Last operator who modified this instance"
          readOnly: true
        pxUpdateSystemID:
          title: "Update System ID"
          type: "string"
          description: "Date and time when this instance was created."
          readOnly: true
        pxUpdateDateTime:
          title: "Update Time"
          type: "string"
          description: "Date and time when this instance was last modified"
          format: "date-time"
          readOnly: true
      description: "Class Data-Party"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-BODY.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Response Body"
      type: "object"
      properties:
        data:
          title: "data"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-DATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-BODY-UIRESOURCES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
      description: "main body for DX API view response"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-APPLICATION-DATAPAGES.true.PEGA_API.PZMAPRESPONSEBODY:
      title: "Data pages"
      type: "object"
      properties:
        dataPages:
          title: "dataPages"
          type: "array"
          description: "List of data pages"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-DATAOBJECT.true.PEGA_API.PZMAPRESPONSEBODY"
      description: "Data objects"
    SCHEMA_FILE_WEBWB_PZGETASSIGNMENT:
      title: "GetAssignment"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzData.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns info of the assignment"
    RULE-OBJ-CLASS.EMBED-AUTOMATIONRULE-ERRORDETAILS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Automation ErrorDetails"
      type: "object"
      properties:
        erroneousInputOutputFieldInPage:
          title: "Erroneous Field In Input/Output Page"
          type: "string"
        erroneousInputOutputIdentifier:
          title: "erroneous Identifier in Input/Output"
          type: "string"
        errorClassification:
          title: "Error classification"
          type: "string"
        localizedValue:
          title: "Localized Value"
          type: "string"
        message:
          title: "message"
          type: "string"
        messageParameters:
          title: "Message Parameters"
          type: "array"
          items:
            title: "pyValue"
            type: "string"
      additionalProperties: false
      description: "Container for holding the error details defined on an automation."
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ATTACHMENTCATEGORIES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "AttachmentCategories"
      type: "object"
      properties:
        canCreate:
          title: "canCreate"
          type: "boolean"
        canDeleteAll:
          title: "canDeleteAll"
          type: "boolean"
        canDeleteOwn:
          title: "canDeleteOwn"
          type: "boolean"
        canEdit:
          title: "canEdit"
          type: "boolean"
        canView:
          title: "canView"
          type: "boolean"
        ID:
          title: "ID"
          type: "string"
        name:
          title: "Name"
          type: "string"
      description: "Class for attachment categories APIs"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-CASE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Case"
      type: "object"
      properties:
        assignments:
          title: "Assignments"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ASSIGNMENT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        availableActions:
          title: "availableActions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ACTION.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        caseTypeID:
          title: "Case type ID"
          type: "string"
        content:
          title: "Content"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        createTime:
          title: "Create time"
          type: "string"
          format: "date-time"
        createdBy:
          title: "Created by"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        lastUpdateTime:
          title: "Last update time"
          type: "string"
          format: "date-time"
        lastUpdatedBy:
          title: "Last updated by"
          type: "string"
        name:
          title: "Name"
          type: "string"
        owner:
          title: "Owner"
          type: "string"
        participants:
          title: "participants"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-PARTICIPANT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        sla:
          title: "SLA"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SLA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        stageID:
          title: "Stage ID"
          type: "string"
        stageLabel:
          title: "stageLabel"
          type: "string"
        stages:
          title: "Stages"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-STAGE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        status:
          title: "Status"
          type: "string"
        urgency:
          title: "Urgency"
          type: "string"
      description: "Class for Pega Cases API implementation."
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTERCONDITION.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Embed-DataExploration-FilterCondition"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Class for data exploration filter condition"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-METADATA.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Dataview metadata"
      type: "object"
      properties:
        classID:
          title: "Class ID"
          type: "string"
          description: "Unique identifier of a dataview class"
        className:
          title: "Class Name"
          type: "string"
          description: "Label of a dataview class"
        dataviewID:
          title: "Dataview ID"
          type: "string"
          description: "Unique identifier of a dataview"
        structure:
          title: "Structure"
          type: "string"
          description: "Structure of a dataview"
        isQueryable:
          title: "Is queryable"
          type: "boolean"
          description: "Indicates whether a given dataview is queryable or not. true\
            \ - queryable, false - not queryable"
        isSearchable:
          title: "Is searchable"
          type: "boolean"
          description: "Indicates whether a given dataview is searchable or not. true\
            \ - searchable, false - not searchable"
        name:
          title: "Name"
          type: "string"
        linksInternal:
          title: "Links internal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZMAPMETADATARESPONSE"
          description: "Holds HATEOAS links"
        parameters:
          title: "List of parameters"
          type: "array"
          description: "List of dataview parameters"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PARAMETER.true.PEGA_API.PZMAPMETADATARESPONSE"
        fields:
          title: "Queryable fields"
          type: "array"
          description: "List of relevant scalar fields of a dataview"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELD.true.PEGA_API.PZMAPMETADATARESPONSE"
        associations:
          title: "associations"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ASSOCIATION.true.PEGA_API.PZMAPMETADATARESPONSE"
      description: "Pega API dataview metadata"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-UPLOADATTACHMENT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "UploadAttachment"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
      description: "returns response of upload attachment API"
    RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Hateoas link"
      type: "object"
      properties:
        href:
          title: "Reference"
          maxLength: 256
          type: "string"
          description: "Hypertext reference to a resource or action"
        rel:
          title: "Relation"
          maxLength: 256
          type: "string"
          description: "Relation of the resource in HATEOAS to current resource"
        request_body:
          title: "Request body"
          description: "Request body for HATEOAS.\nFor example: \"dataViewParameters\"\
            : {\n\"customerID\": \"C-123\"\n}"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        title:
          title: "Title"
          maxLength: 256
          type: "string"
          description: "Title of HATEOAS"
        type:
          title: "Type"
          maxLength: 256
          type: "string"
          description: "Http method"
      description: "Class for HATEOAS link"
    RULE-OBJ-CLASS.PEGA-API-DATAVIEWRUNTIME-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSONDEFAULTNULL:
      title: "Pega-API-DataViewRuntime-Response"
      type: "object"
      properties:
        data:
          title: "data"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        uiResources:
          title: "uiResources"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
      description: "Test"
    SCHEMA_FILE_WEBWB_PZGETMENTIONTYPES:
      title: "Get mention types"
      type: "array"
      items:
        properties:
          isDefault:
            title: "isDefault"
            type: "string"
            description: "Is default selection"
          label:
            title: "label"
            type: "string"
            description: "label of mention type"
          type:
            title: "type"
            type: "string"
            description: "mention type"
          mentionsHeader:
            title: "mentionsHeader"
            type: "string"
            description: "Header to be displayed for the mention suggestions"
    SCHEMA_FILE_WEBWB_PZGETSTAGES:
      title: "Get Stages"
      type: "object"
      properties:
        stages:
          title: "Stages"
          type: "array"
          items:
            $ref: "#/components/schemas/stages"
      description: "holds stages info"
    SCHEMA_FILE_WEBWB_PZCHANGESTAGE:
      title: "ChangeStage"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzData.yaml"
        stageID:
          title: "stageID"
          type: "string"
        nextAssignmentInfo:
          title: "nextAssignmentInfo"
          description: "holds next assignment info"
          allOf:
          - $ref: "webwb/pzNextAssignment.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns case info after change stage"
    RULE-OBJ-CLASS.CODE-MERGEINSTRUCTIONS.true.PEGA_API:
      title: "Merge Instructions"
      type: "object"
      description: "Merge Instructions for embedded pages & pagelists"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES:
      title: "Message"
      type: "object"
      properties:
        completeMessageKey:
          title: "completeMessageKey"
          type: "string"
          description: "Holds complete message key of the message"
        context:
          title: "Context"
          type: "string"
        contextDescription:
          title: "Context Description"
          type: "string"
        contextType:
          title: "Context Type"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        likeCount:
          title: "Like Count"
          type: "string"
        mentions:
          title: "mentions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        message:
          title: "Message"
          type: "string"
        postedTime:
          title: "Post Time"
          type: "string"
          format: "date-time"
        postedByUser:
          title: "postedByUser"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        replies:
          title: "replies"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-REPLY.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        updatedTime:
          title: "Update Time"
          type: "string"
          format: "date-time"
      description: "Class for Pega Social Message API implementation."
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-POSTDATA-EDIT.true.PEGA_API:
      title: "Pega-API-CaseManagement-Social-Message-PostData-Edit"
      type: "object"
      properties:
        message:
          title: "Message"
          type: "string"
      description: "Holds properties for edit request data"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-STAGE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Stage"
      type: "object"
      properties:
        entryTime:
          title: "entryTime"
          type: "string"
          format: "date-time"
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        name:
          title: "Name"
          type: "string"
        processes:
          title: "processes"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-PROCESS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        sla:
          title: "SLA"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SLA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        type:
          title: "Type"
          type: "string"
        visited_status:
          title: "visited_status"
          type: "string"
      description: "Class for stage information"
    RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-REQUEST.true.PEGA_API:
      title: "List personalization request"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        markAsAppDefault:
          title: "mark as app default"
          type: "boolean"
        markAsDefault:
          title: "mark as default"
          type: "boolean"
        name:
          title: "Name"
          type: "string"
        personalizationState:
          title: "personalization state"
          type: "string"
      description: "Class for Pega data exploration API"
    RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZCONVERTERRORSTOJSON:
      title: "Automation Errors"
      type: "object"
      properties:
        pyErrorClassification:
          title: "pyErrorClassification"
          type: "string"
          readOnly: true
        pyLocalizedValue:
          title: "Localized Value"
          type: "string"
          readOnly: true
        pyErrorDetails:
          title: "Error details"
          type: "array"
          readOnly: true
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-AUTOMATIONRULE-ERRORDETAILS.true.PEGA_API.PZCONVERTERRORSTOJSON"
      additionalProperties: false
      description: "This class represents error messages that can be handled by an\
        \ Automation rule."
    SCHEMA_FILE_WEBWB_PZADDFOLLOWERS:
      title: "users"
      type: "array"
      items:
        $ref: "#/components/schemas/User"
      properties:
        ID:
          title: "ID"
          type: "string"
      description: "request body to add multiple followers"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELDSOURCEVALUE.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Field source value"
      type: "object"
      properties:
        displayValue:
          title: "Display value"
          maxLength: 256
          type: "string"
          description: "Display value"
        value:
          title: "value"
          type: "string"
      description: "Pega metadata API field's valid value"
    SCHEMA_FILE_WEBWB_PZRECENTSINFO:
      title: "Recents"
      type: "object"
      properties:
        recents:
          title: "recents"
          type: "array"
          items:
            $ref: "#/components/schemas/recents"
          description: "holds list of recent items"
      description: "holds recent items"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ASSIGNMENT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Assignment"
      type: "object"
      properties:
        actions:
          title: "Actions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ACTION.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        name:
          title: "Name"
          type: "string"
        routedTo:
          title: "Routed to"
          type: "string"
        sla:
          title: "SLA"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SLA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        urgency:
          title: "Urgency"
          type: "string"
      description: "Class for performing action on assignment"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-FOLLOWER.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Follower"
      type: "object"
      properties:
        followers:
          title: "Followers"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-PERSON.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
      description: "Class for follower APIs"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API:
      title: "Message"
      type: "object"
      properties:
        completeMessageKey:
          title: "completeMessageKey"
          type: "string"
          description: "Holds complete message key of the message"
        context:
          title: "Context"
          type: "string"
        contextDescription:
          title: "Context Description"
          type: "string"
        contextType:
          title: "Context Type"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        likeCount:
          title: "Like Count"
          type: "string"
        mentions:
          title: "mentions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API"
        message:
          title: "Message"
          type: "string"
        postedTime:
          title: "Post Time"
          type: "string"
          format: "date-time"
        postedByUser:
          title: "postedByUser"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API"
        replies:
          title: "replies"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-REPLY.true.PEGA_API"
        updatedTime:
          title: "Update Time"
          type: "string"
          format: "date-time"
      description: "Class for Pega Social Message API implementation."
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-TAGS-DATA.true.PEGA_API.PZSETSUGGESTEDTAGSRESPONSE:
      title: "Pega-API-CaseManagement-Social-Tags-Data"
      type: "object"
      properties:
        label:
          title: "Label"
          type: "string"
      description: "Holds tags data for suggested and recent tags list rest response"
    SCHEMA_FILE_WEBWB_PZGETPAGE:
      title: "GetPageDetails"
      type: "object"
      properties:
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: ""
          description: "holds page details referred in the view"
      description: "returns details of the page"
    SCHEMA_FILE_WEBWB_PZPARTICIPANTROLE:
      title: "Participant roles"
      type: "object"
      properties:
        participant_roles:
          title: "participant_roles"
          type: "array"
          items:
            $ref: "#/components/schemas/participant_role"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-REPLY.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES:
      title: "Pega-API-CaseManagement-Social-Message-Reply"
      type: "object"
      properties:
        completeMessageKey:
          title: "completeMessageKey"
          type: "string"
          description: "Holds complete message key of the message"
        context:
          title: "Context"
          type: "string"
        contextDescription:
          title: "Context Description"
          type: "string"
        contextType:
          title: "Context Type"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        likeCount:
          title: "Like Count"
          type: "string"
        mentions:
          title: "mentions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        message:
          title: "Message"
          type: "string"
        postedTime:
          title: "Post Time"
          type: "string"
          format: "date-time"
        postedByUser:
          title: "postedByUser"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        updatedTime:
          title: "Update Time"
          type: "string"
          format: "date-time"
      description: "Holds replies."
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-REPLY.true.PEGA_API:
      title: "Pega-API-CaseManagement-Social-Message-Reply"
      type: "object"
      properties:
        completeMessageKey:
          title: "completeMessageKey"
          type: "string"
          description: "Holds complete message key of the message"
        context:
          title: "Context"
          type: "string"
        contextDescription:
          title: "Context Description"
          type: "string"
        contextType:
          title: "Context Type"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        likeCount:
          title: "Like Count"
          type: "string"
        mentions:
          title: "mentions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API"
        message:
          title: "Message"
          type: "string"
        postedTime:
          title: "Post Time"
          type: "string"
          format: "date-time"
        postedByUser:
          title: "postedByUser"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API"
        updatedTime:
          title: "Update Time"
          type: "string"
          format: "date-time"
      description: "Holds replies."
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES:
      title: "Social"
      type: "object"
      properties:
        entryCount:
          title: "entryCount"
          type: "integer"
          format: "int32"
        ID:
          title: "ID"
          type: "string"
        messages:
          title: "Messages"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES"
        pageFirstEntry:
          title: "pageFirstEntry"
          type: "string"
        pageLastEntry:
          title: "pageLastEntry"
          type: "string"
      description: "Class for Pega Social API implementation."
    SCHEMA_FILE_WEBWB_PZPERFORMASSIGNMENT:
      title: "PerformAssignment"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzData.yaml"
        confirmationNote:
          title: "confirmationNote"
          type: "string"
        nextAssignmentInfo:
          title: "nextAssignmentInfo"
          description: "holds next assignment info"
          allOf:
          - $ref: "webwb/pzNextAssignment.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns response info of case created"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ASSOCIATION.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Embed-DataExploration-Association"
      type: "object"
      properties:
        id:
          title: "id"
          type: "string"
        name:
          title: "name"
          type: "string"
        joinedClassID:
          title: "joinedClassID"
          type: "string"
        joinedClassName:
          title: "joinedClassName"
          type: "string"
        fields:
          title: "Shared fields"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELD.true.PEGA_API.PZMAPMETADATARESPONSE"
      description: "test"
    RULE-OBJ-CLASS.PEGA-API-PAGE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Pega-API-Page-Request"
      type: "object"
      properties:
        dataContext:
          title: "dataContext"
          type: "string"
        dataContextParameters:
          title: "dataContextParameters"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
      description: "Class for ShowPage API request information"
    SCHEMA_FILE_WEBWB_PZMOVERECORDSRESPONSESCHEMA:
      title: "moveRecordsResponse"
      type: "object"
      properties:
        pyStatus:
          title: "pyStatus"
          type: "string"
      description: "Move list records response"
    SCHEMA_FILE_WEBWB_PZSAVEASSIGNMENT:
      title: "SaveAssignment"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzData.yaml"
      description: "returns details of the case"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SLA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "SLA"
      type: "object"
      properties:
        deadline:
          title: "deadline"
          type: "string"
          format: "date-time"
        goal:
          title: "goal"
          type: "string"
          format: "date-time"
        ID:
          title: "ID"
          type: "string"
      description: "This Class is a container for Casemanagement SLA"
    SCHEMA_FILE_WEBWB_PZGETBULKCASEDETAILS:
      title: "GetAssignment"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzBulkData.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns info of the assignment"
    SCHEMA_FILE_WEBWB_PZUPDATEUSERSETTINGSREQUESTSCHEMA:
      title: "userSetting"
      type: "object"
      description: "holds user setting"
      properties:
        patchPreference:
          title: "patchPreference"
          type: "string"
          description: "It can have a value 'replace' to replace the setting"
        presentation:
          allOf:
          - $ref: "webwb/pzUserSettingsPresentationSchema.yaml"
    RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "List personalization response"
      type: "object"
      properties:
        allPersonalizations:
          title: "all personalizations"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-REQUEST.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        defaultPersonalization:
          title: "default personalization"
          type: "string"
        ID:
          title: "ID"
          type: "string"
      description: "Class for Pega data exploration API"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-ATTACHMENTLIST.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "AttachmentList"
      type: "object"
      properties:
        attachments:
          title: "attachments"
          type: "array"
          description: "Holds list of attachments"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ATTACHMENT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
      description: "returns list of attachments in a case"
    SCHEMA_FILE_WEBWB_PZADDFOLLOWERSRESPONSESCHEMA:
      title: "Response"
      type: "object"
      properties:
        results:
          title: "results"
          type: "array"
          items:
            $ref: "#/components/schemas/Response"
      description: "This represents multi-status response for post followers"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-POSTDATA.true.PEGA_API:
      title: "Pega-API-CaseManagement-Social-Message-PostData"
      type: "object"
      properties:
        context:
          title: "Context"
          type: "string"
        message:
          title: "Message"
          type: "string"
      description: "Holds properties for post request data"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-APPLICATION-DATAOBJECTS.true.PEGA_API.PZMAPRESPONSEBODY:
      title: "Data objects"
      type: "object"
      properties:
        dataObjects:
          title: "Data objects"
          type: "array"
          description: "List of data objects"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-DATAOBJECT.true.PEGA_API.PZMAPRESPONSEBODY"
      description: "Data objects"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTERCONDITION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Embed-DataExploration-FilterCondition"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Class for data exploration filter condition"
    SCHEMA_FILE_WEBWB_PZTAGCASEREQUESTSCHEMA:
      title: "tags"
      type: "array"
      items:
        $ref: "#/components/schemas/Tag"
      properties:
        Name:
          title: "Name"
          type: "string"
      description: "request body to add multiple tags"
    RULE-OBJ-CLASS.PEGA-API-PARAMETER.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Parameters"
      type: "object"
      properties:
        name:
          title: "Name"
          type: "string"
        dataType:
          title: "dataType"
          type: "string"
          description: "data type of the parameter"
        required:
          title: "required"
          type: "boolean"
          description: "True if the parameter is required else false."
        description:
          title: "Description"
          type: "string"
        defaultValue:
          title: "defaultValue"
          type: "string"
          description: "default value of the parameter"
      description: "Holds the parameter information"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-LIKE-LIKESDATA.true.PEGA_API.PZGETLIKESJSONRESPONSE:
      title: "LikesData"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        name:
          title: "name"
          type: "string"
      description: "class for likesdata"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-DATAOBJECT.true.PEGA_API.PZMAPRESPONSEBODY:
      title: "Data object"
      type: "object"
      properties:
        classID:
          title: "Class ID"
          maxLength: 256
          type: "string"
          description: "Unique class identifier"
        dataObjectID:
          title: "Data object ID"
          maxLength: 256
          type: "string"
          description: "Unique identifier for a data object"
        defaultListDataView:
          title: "Default list data view"
          maxLength: 256
          type: "string"
          description: "Name of default list data view of the data object"
        description:
          title: "Description"
          maxLength: 256
          type: "string"
          description: "Description of data object"
        name:
          title: "Name"
          maxLength: 256
          type: "string"
          description: "Label of data object"
        isDefaultListDataViewQueryable:
          title: "Is default list data view queryable"
          type: "boolean"
          description: "Indicates whether defaultListDataView is queryable or not"
        linksInternal:
          title: "Links internal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZMAPRESPONSEBODY"
          description: "Holds HATEOAS links"
      description: "Data object information"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-TAGS.true.PEGA_API.PZSETTAGSRESPONSE:
      title: "Pega-API-CaseManagement-Social-Tags"
      type: "object"
      description: "Holds response for tags"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ACTION.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Action"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        name:
          title: "Name"
          type: "string"
        type:
          title: "Type"
          type: "string"
      description: "This Class is a container for assignment actions"
    SCHEMA_FILE_WEBWB_PZADDRELATEDCASES:
      title: "cases"
      type: "array"
      items:
        $ref: "#/components/schemas/Case"
      properties:
        ID:
          title: "ID"
          type: "string"
      description: "request body to add related cases"
    RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-REQUEST.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Data request"
      type: "object"
      properties:
        data:
          title: "data"
          description: "Holds the request data being sent to data record CRUD api.\
            \ Implemented as a Single Page with $CLASS definition since request data\
            \ structure varies with each data record."
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
      description: "Request schema"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-CASETYPES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "CaseTypes"
      type: "object"
      properties:
        caseTypes:
          title: "Case types"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-CASETYPE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
      description: "returns list of caseTypes in application"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Field or aggregation or calculation"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Provide a field name or aggregation name or calculation name"
    SCHEMA_FILE_WEBWB_PZGETBULKACTIONSREQUESTSCHEMA:
      title: "cases"
      type: "array"
      items:
        $ref: "#/components/schemas/Case_c034e30a-553f-41aa-9a0f-c3814984422a"
      properties:
        ID:
          title: "ID"
          type: "string"
      description: "request body to get bulk actions"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Field or aggregation or calculation"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Provide a field name or aggregation name or calculation name"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-RESULTCOUNT.true.PEGA_API.PZTRANSLATEVIEWCOUNTPAGETOJSON:
      title: "Data results count"
      type: "object"
      properties:
        resultCount:
          title: "Count of results"
          type: "integer"
          description: "Total count of results fetched in the request"
          format: "int32"
        fetchDateTime:
          title: "fetchDateTime"
          type: "string"
          description: "Response fetch date time"
          format: "date-time"
        hasMoreResults:
          title: "hasMoreResults"
          type: "boolean"
          description: "Indicates if there are more results to fetch in case paging\
            \ is specified"
        ID:
          title: "ID"
          type: "string"
      description: "Data view result count end point Response schema"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELDSOURCE.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Field source"
      type: "object"
      properties:
        fieldForDisplay:
          title: "Field for display"
          maxLength: 256
          type: "string"
          description: "Field to look at for display"
        fieldForValue:
          title: "Field for value"
          maxLength: 256
          type: "string"
          description: "Field to look at for the value"
        type:
          title: "Source type"
          maxLength: 256
          type: "string"
          description: "Source type of the field"
        availableValues:
          title: "Available values"
          type: "array"
          description: "Available list of values for a field"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELDSOURCEVALUE.true.PEGA_API.PZMAPMETADATARESPONSE"
        linksInternal:
          title: "Links internal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZMAPMETADATARESPONSE"
          description: "Holds HATEOAS links"
      description: "Pega metadata API field's source"
    SCHEMA_FILE_WEBWB_PZREFRESHACTION:
      title: "RefreshAction"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          properties:
            caseInfo:
              title: "caseInfo"
              type: "object"
              description: "holds case and any other pages info"
              allOf:
              - $ref: "#/components/schemas/caseInfo"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          properties:
            context_data:
              title: "context_data"
              type: "object"
              example:
                caseInfo:
                  content:
                    summary_of_lists__:
                      D_CaseStages:
                        pxResults: "D_CaseStages_pa354306555124387pz.pxResults"
                    Residence:
                      summary_of_associated_lists__:
                        State:
                        - key: "Telangana"
                          value: "Telangana"
                    summary_of_associated_lists__:
                      FlightExperienceType:
                      - key: "Indigo"
                        value: "Indigo"
                      - key: "Spice Jet"
                        value: "Spice Jet"
              allOf:
              - $ref: ""
      description: "returns info of the case"
    SCHEMA_FILE_WEBWB_PZPARTICIPANTROLEDETAIL:
      title: "Participant view Details"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "#/components/schemas/participant_view_details"
          description: "holds view fields"
        uiResources:
          title: "uiResources"
          type: "object"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
          description: "holds view information"
    RULE-OBJ-CLASS.PEGA-API-DATAPERSISTENCE-RESPONSE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Pega-API-DataPersistence"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
      description: "Class for data persistence API response"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-REQUEST.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Data request"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Request schema"
    RULE-OBJ-CLASS.WORK-.true.PEGA_API:
      title: "Case"
      type: "object"
      properties:
        pxActiveChannel:
          title: "Active channel"
          type: "string"
          readOnly: true
        pxCommitDateTime:
          title: "Commit DateTime"
          type: "string"
          format: "date-time"
          readOnly: true
        pxCreateDateTime:
          title: "Create date/time"
          type: "string"
          description: "Date and time when this instance was created."
          format: "date-time"
          readOnly: true
        pxCreateOperator:
          title: "Create Operator"
          type: "string"
          description: "Operator who created this instance"
          readOnly: true
        pxCreateOpName:
          title: "Create operator name"
          type: "string"
          description: "Defines the create operator"
          readOnly: true
        pyDescription:
          title: "Description"
          type: "string"
          description: "Description"
          format: "textarea"
        pyEffortActual:
          title: "Effort Actual"
          type: "number"
          description: "Actual effort"
          format: "double"
        pyEffortEstimate:
          title: "Effort Estimate"
          type: "number"
          description: "Estimated effort"
          format: "double"
        pyElapsedStatusNew:
          title: "Elapsed in Status New"
          type: "number"
          description: "How long in Status New"
          format: "double"
        pyElapsedStatusOpen:
          title: "Elapsed in Status Open"
          type: "number"
          description: "How long in Status Open"
          format: "double"
        pyElapsedStatusPending:
          title: "Elapsed in Status Pending"
          type: "number"
          description: "How long in Status Pending"
          format: "double"
        pzInsKey:
          title: "Instance Handle Key"
          type: "string"
          description: "Instance Handle"
          readOnly: true
        pyLabel:
          title: "Label"
          maxLength: 64
          type: "string"
          description: "Label"
        pxNativeSocialChannel:
          title: "Native Social Channel"
          type: "string"
          readOnly: true
        pyOwnerDivision:
          title: "Owner Division"
          maxLength: 32
          type: "string"
          description: "Owner Division"
        pyOwnerOrg:
          title: "Owner Organization"
          maxLength: 32
          type: "string"
          description: "Owner Organization ID"
        pyOwnerOrgUnit:
          title: "Owner OrgUnit"
          maxLength: 32
          type: "string"
          description: "Owner OrgUnit"
        pyResolvedTimestamp:
          title: "Resolution TimeStamp"
          type: "string"
          description: "Time item was resolved"
          format: "date-time"
        pyResolvedDivision:
          title: "Resolved by Division"
          maxLength: 32
          type: "string"
          description: "Resolved by Division"
        pyResolvedOrg:
          title: "Resolved by Organization"
          maxLength: 32
          type: "string"
          description: "Resolved by Organization ID"
        pyResolvedOrgUnit:
          title: "Resolved by OrgUnit"
          maxLength: 32
          type: "string"
          description: "Resolved by Org Unit"
        pyResolvedUserID:
          title: "Resolved by User"
          type: "string"
          description: "Resolved by User ID"
        pyResolvedUserWorkgroup:
          title: "Resolved User Workgroup"
          maxLength: 64
          type: "string"
          description: "Resolved by User Workgroup"
        pxSaveDateTime:
          title: "Save DateTime"
          type: "string"
          format: "date-time"
          readOnly: true
        pySLADeadline:
          title: "SLA Deadline"
          type: "string"
          description: "Service Level Agreement Deadline"
          format: "date-time"
        pySLAGoal:
          title: "SLA Goal"
          type: "string"
          description: "Service Level Agreement Goal"
          format: "date-time"
        pySLAStartTime:
          title: "SLA Start Time"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-PROPERTY.WORK-.PYSLASTARTTIME"
        pxUpdateDateTime:
          title: "Update date/time"
          type: "string"
          description: "Date and time when this instance was last modified"
          format: "date-time"
          readOnly: true
        pxUpdateOpName:
          title: "Update operator name"
          type: "string"
          description: "Last operator who modified this instance"
          readOnly: true
        pxUrgencyWork:
          title: "Urgency"
          type: "number"
          description: "This is the Total Urgency"
          format: "double"
          readOnly: true
        pyID:
          title: "Work id"
          maxLength: 32
          type: "string"
          description: "Work ID"
          readOnly: true
        pyStatusWork:
          title: "Work Status"
          maxLength: 32
          type: "string"
          description: "Work Status"
          readOnly: true
      description: "Base class for all Work-"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-PERSON.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Person"
      type: "object"
      properties:
        email:
          title: "Email"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        image:
          title: "image"
          type: "string"
        name:
          title: "Name"
          type: "string"
        phone:
          title: "phone"
          type: "string"
        position:
          title: "Position"
          type: "string"
      description: "Class for Pega Actor API implementation."
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES:
      title: "Pega-API-CaseManagement-Social-Message-MentionsData"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        mentionsID:
          title: "mentionsID"
          type: "string"
        name:
          title: "Name"
          type: "string"
        type:
          title: "Type"
          type: "string"
      description: "Holds mentions metadata for message record. Created for swagger\
        \ documentation"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ATTACHMENT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Attachment"
      type: "object"
      properties:
        category:
          title: "category"
          type: "string"
          description: "Holds attachment category"
          readOnly: true
        createTime:
          title: "Create time"
          type: "string"
          format: "date-time"
        createdBy:
          title: "Created by"
          type: "string"
        extension:
          title: "extension"
          type: "string"
          description: "holds attachment extension"
          readOnly: true
        fileName:
          title: "fileName"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        mimeType:
          title: "Mime type"
          type: "string"
          description: "holds attachment extension"
          readOnly: true
        name:
          title: "Name"
          type: "string"
        thumbnail:
          title: "thumbnail"
          type: "string"
          readOnly: true
        type:
          title: "Type"
          type: "string"
      description: "Class for attachment APIs"
    RULE-OBJ-CLASS.PEGA-API-DATAVIEWRUNTIME-REQUEST.true.PEGA_API:
      title: "Pega-API-DataViewRuntime-Request"
      type: "object"
      properties:
        dataViewParameters:
          title: "dataViewParameters"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
      description: "Test"
    RULE-OBJ-PROPERTY.WORK-.PYSLASTARTTIME:
      type: "string"
      enum:
      - "AssignmentCreation"
      - "CurrentTime"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API.PZGETRESPONSEFORSOCIALMESSAGES:
      title: "Pega-API-CaseManagement-Social-UserDetails"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        name:
          title: "Name"
          type: "string"
        userImage:
          title: "userImage"
          type: "string"
      description: "Holds posted user details"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API.PYGETRESPONSEFORADDPOST:
      title: "Pega-API-CaseManagement-Social-Message-MentionsData"
      type: "object"
      properties:
        name:
          title: "Name"
          type: "string"
        mentionsID:
          title: "mentionsID"
          type: "string"
        mentionsType:
          title: "mentionsType"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        mentionsClass:
          title: "mentionsClass"
          type: "string"
      description: "Holds mentions metadata for message record. Created for swagger\
        \ documentation"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-DATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Pega-API-DataExploration"
      type: "object"
      properties:
        resultCount:
          title: "Count of results"
          type: "integer"
          description: "Total count of results fetched in the request"
          format: "int32"
        fetchDateTime:
          title: "fetchDateTime"
          type: "string"
          description: "Response fetch date time"
          format: "date-time"
        hasMoreResults:
          title: "hasMoreResults"
          type: "boolean"
          description: "Indicates if there are more results to fetch in case paging\
            \ is specified"
        ID:
          title: "ID"
          type: "string"
        data:
          title: "List of results"
          type: "array"
          description: "Response data having the list of results"
          items:
            $ref: "#/components/schemas/_unknown_object"
        pageNumber:
          title: "page number"
          type: "integer"
          description: "Number of the page to retrieve results"
          format: "int32"
        pageSize:
          title: "Page size"
          type: "integer"
          description: "Size of the page to retrieve results"
          format: "int32"
      description: "Class for data exploration API response"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-PROCESS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Process"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        sla:
          title: "SLA"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SLA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
      description: "Class for Pega Cases API implementation."
    SCHEMA_FILE_WEBWB_PZCREATECASE:
      title: "CreateCase"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzData.yaml"
        ID:
          title: "ID"
          type: "string"
        nextAssignmentInfo:
          title: "nextAssignmentInfo"
          description: "holds next assignment info"
          allOf:
          - $ref: "webwb/pzNextAssignment.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns response info of case created"
    _unknown_object:
      title: "Unknown object"
      type: "object"
      additionalProperties: true
    RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZMAPRESPONSEBODY:
      title: "Hateoas link"
      type: "object"
      properties:
        href:
          title: "Reference"
          maxLength: 256
          type: "string"
          description: "Hypertext reference to a resource or action"
        rel:
          title: "Relation"
          maxLength: 256
          type: "string"
          description: "Relation of the resource in HATEOAS to current resource"
        title:
          title: "Title"
          maxLength: 256
          type: "string"
          description: "Title of HATEOAS"
        type:
          title: "Type"
          maxLength: 256
          type: "string"
          description: "Http method"
        request_body:
          title: "Request body"
          description: "Request body for HATEOAS.\nFor example: \"dataViewParameters\"\
            : {\n\"customerID\": \"C-123\"\n}"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
      description: "Class for HATEOAS link"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-TAG.true.PEGA_API.PZGETTAGSJSONRESPONSE:
      title: "Tag"
      type: "object"
      properties:
        tagsList:
          title: "tagsList"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-TAG-TAGSDATA.true.PEGA_API.PZGETTAGSJSONRESPONSE"
      description: "Class for follower APIs"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE.true.PEGA_API.PYGETRESPONSEFORADDPOST:
      title: "Message"
      type: "object"
      properties:
        context:
          title: "Context"
          type: "string"
        contextType:
          title: "Context Type"
          type: "string"
        message:
          title: "Message"
          type: "string"
        postedTime:
          title: "Post Time"
          type: "string"
          format: "date-time"
        completeMessageKey:
          title: "completeMessageKey"
          type: "string"
          description: "Holds complete message key of the message"
        ID:
          title: "ID"
          type: "string"
        postedByUser:
          title: "postedByUser"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API.PYGETRESPONSEFORADDPOST"
        mentions:
          title: "mentions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API.PYGETRESPONSEFORADDPOST"
      description: "Class for Pega Social Message API implementation."
    SCHEMA_FILE_WEBWB_PZGETALLLCASEPARTICIPANTS:
      title: "GetParticipantsList"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzParticipants.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns details of the case"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-TAG-TAGSDATA.true.PEGA_API.PZGETTAGSJSONRESPONSE:
      title: "Pega-API-CaseManagement-Tag-TagsData"
      type: "object"
      properties:
        tagName:
          title: "TagName"
          type: "string"
        tagKey:
          title: "tagKey"
          type: "string"
      description: "Holds mentions metadata for message record. Created for swagger\
        \ documentation"
    RULE-OBJ-CLASS.WORK-.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Case"
      type: "object"
      properties:
        pxActiveChannel:
          title: "Active channel"
          type: "string"
          readOnly: true
        pxCommitDateTime:
          title: "Commit DateTime"
          type: "string"
          format: "date-time"
          readOnly: true
        pxCreateDateTime:
          title: "Create date/time"
          type: "string"
          description: "Date and time when this instance was created."
          format: "date-time"
          readOnly: true
        pxCreateOperator:
          title: "Create Operator"
          type: "string"
          description: "Operator who created this instance"
          readOnly: true
        pxCreateOpName:
          title: "Create operator name"
          type: "string"
          description: "Defines the create operator"
          readOnly: true
        pyDescription:
          title: "Description"
          type: "string"
          description: "Description"
          format: "textarea"
        pyEffortActual:
          title: "Effort Actual"
          type: "number"
          description: "Actual effort"
          format: "double"
        pyEffortEstimate:
          title: "Effort Estimate"
          type: "number"
          description: "Estimated effort"
          format: "double"
        pyElapsedStatusNew:
          title: "Elapsed in Status New"
          type: "number"
          description: "How long in Status New"
          format: "double"
        pyElapsedStatusOpen:
          title: "Elapsed in Status Open"
          type: "number"
          description: "How long in Status Open"
          format: "double"
        pyElapsedStatusPending:
          title: "Elapsed in Status Pending"
          type: "number"
          description: "How long in Status Pending"
          format: "double"
        pzInsKey:
          title: "Instance Handle Key"
          type: "string"
          description: "Instance Handle"
          readOnly: true
        pyLabel:
          title: "Label"
          maxLength: 64
          type: "string"
          description: "Label"
        pxNativeSocialChannel:
          title: "Native Social Channel"
          type: "string"
          readOnly: true
        pyOwnerDivision:
          title: "Owner Division"
          maxLength: 32
          type: "string"
          description: "Owner Division"
        pyOwnerOrg:
          title: "Owner Organization"
          maxLength: 32
          type: "string"
          description: "Owner Organization ID"
        pyOwnerOrgUnit:
          title: "Owner OrgUnit"
          maxLength: 32
          type: "string"
          description: "Owner OrgUnit"
        pyResolvedTimestamp:
          title: "Resolution TimeStamp"
          type: "string"
          description: "Time item was resolved"
          format: "date-time"
        pyResolvedDivision:
          title: "Resolved by Division"
          maxLength: 32
          type: "string"
          description: "Resolved by Division"
        pyResolvedOrg:
          title: "Resolved by Organization"
          maxLength: 32
          type: "string"
          description: "Resolved by Organization ID"
        pyResolvedOrgUnit:
          title: "Resolved by OrgUnit"
          maxLength: 32
          type: "string"
          description: "Resolved by Org Unit"
        pyResolvedUserID:
          title: "Resolved by User"
          type: "string"
          description: "Resolved by User ID"
        pyResolvedUserWorkgroup:
          title: "Resolved User Workgroup"
          maxLength: 64
          type: "string"
          description: "Resolved by User Workgroup"
        pxSaveDateTime:
          title: "Save DateTime"
          type: "string"
          format: "date-time"
          readOnly: true
        pySLADeadline:
          title: "SLA Deadline"
          type: "string"
          description: "Service Level Agreement Deadline"
          format: "date-time"
        pySLAGoal:
          title: "SLA Goal"
          type: "string"
          description: "Service Level Agreement Goal"
          format: "date-time"
        pySLAStartTime:
          title: "SLA Start Time"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-PROPERTY.WORK-.PYSLASTARTTIME"
        pxUpdateDateTime:
          title: "Update date/time"
          type: "string"
          description: "Date and time when this instance was last modified"
          format: "date-time"
          readOnly: true
        pxUpdateOpName:
          title: "Update operator name"
          type: "string"
          description: "Last operator who modified this instance"
          readOnly: true
        pxUrgencyWork:
          title: "Urgency"
          type: "number"
          description: "This is the Total Urgency"
          format: "double"
          readOnly: true
        pyID:
          title: "Work id"
          maxLength: 32
          type: "string"
          description: "Work ID"
          readOnly: true
        pyStatusWork:
          title: "Work Status"
          maxLength: 32
          type: "string"
          description: "Work Status"
          readOnly: true
      description: "Base class for all Work-"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-DATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Response Data"
      type: "object"
      properties:
        caseInfo:
          title: "caseInfo"
          description: "holds case details"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-CASE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
      description: "page defining \"data\" in Pega-API-Response"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELD.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Dataview field"
      type: "object"
      properties:
        category:
          title: "Category"
          type: "string"
          description: "Category of the field.\nData View label for class fields,\n\
            Association name for fields from an association"
        parentCategory:
          title: "parentCategory"
          type: "string"
          description: "Category of the field.\nData View label for class fields,\n\
            Association name for fields from an association"
        associationID:
          title: "Association ID"
          type: "string"
          description: "Association ID sent along with joined fields"
        classID:
          title: "classID"
          type: "string"
        description:
          title: "Description"
          maxLength: 256
          type: "string"
          description: "Description of the field"
        displayAs:
          title: "Display format"
          maxLength: 256
          type: "string"
          description: "Display format of the field"
        fieldID:
          title: "Field ID"
          maxLength: 256
          type: "string"
          description: "Unique Id of the field"
        fieldType:
          title: "Field type"
          maxLength: 256
          type: "string"
          description: "Type of the field"
        isReadOnly:
          title: "Is a read-only field"
          type: "boolean"
          description: "Is a read-only field"
        name:
          title: "Name"
          maxLength: 256
          type: "string"
          description: "Label of the field"
        maxLength:
          title: "Maximum length allowed"
          type: "integer"
          description: "Maximum allowed length of a field"
          format: "int32"
        dataType:
          title: "Data type"
          maxLength: 256
          type: "string"
          description: "Datatype of the field"
        source:
          title: "Source of the field"
          description: "Source of the field for picklist, user reference etc."
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FIELDSOURCE.true.PEGA_API.PZMAPMETADATARESPONSE"
      description: "Pega API dataview field"
    RULE-OBJ-CLASS.PEGA-API-PERSONALIZATIONS-LISTS-REQUEST.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "List personalization request"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        markAsAppDefault:
          title: "mark as app default"
          type: "boolean"
        markAsDefault:
          title: "mark as default"
          type: "boolean"
        name:
          title: "Name"
          type: "string"
        personalizationState:
          title: "personalization state"
          type: "string"
      description: "Class for Pega data exploration API"
    SCHEMA_FILE_WEBWB_PZANCESTORHIERARHY:
      title: "ancestorHierarchy"
      type: "array"
      items:
        $ref: "#/components/schemas/ancestors"
      description: "holds list of ancestors"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-SORT.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Sort field"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Specify field to sort and sort type"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-BODY-UIRESOURCES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "uiResources"
      type: "object"
      properties:
        context_data:
          title: "context_data"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-CONTEXTDATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
        resources:
          title: "resources"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-RESOURCES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        root:
          title: "root"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-ROOT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-RESPONSE-BODY-UIRESOURCES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
      description: "holds response ui response meta data"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MENTIONSLIST.true.PEGA_API.PZSETMENTIONSRESPONSE:
      title: "Pega-API-CaseManagement-Social-MentionsList"
      type: "object"
      properties:
        ?
        : title: ""
          type: "string"
        mentionsID:
          title: "mentionsID"
          type: "string"
      description: "holds property for rest mentions response list"
    SCHEMA_FILE_WEBWB_PZUPDATEUSERSETTINGSRESPONSESCHEMA:
      title: "userSetting"
      type: "object"
      description: "holds user setting"
      properties:
        presentation:
          allOf:
          - $ref: "webwb/pzUserSettingsPresentationSchema.yaml"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-ATTACHMENTCATEGORIES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "AttachmentCategories"
      type: "object"
      properties:
        attachment_categories:
          title: "attachment_categories"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-ATTACHMENTCATEGORIES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
      description: "returns list of attachment categories in a case"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-CALCULATION.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Embed-DataExploration-Item-Calculation"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Class for data exploration calculations"
    SCHEMA_FILE_WEBWB_PZGETCASEDETAILS:
      title: "GetCaseDetails"
      type: "object"
      properties:
        data:
          title: "data"
          type: "object"
          allOf:
          - $ref: "webwb/pzData.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns details of the case"
    SCHEMA_FILE_WEBWB_PZGETRELATEDCASES:
      title: "GetRelatedCases"
      type: "object"
      properties:
        relatedCases:
          title: "relatedCases"
          type: "array"
          items:
            $ref: "#/components/schemas/relatedCases"
      description: "holds realted cases info"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Data exploration query"
      type: "object"
      properties:
        aggregationsInternal:
          title: "aggregations"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-AGGREGATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
          description: "Items to aggregate data for data exploration"
        calculationsInternal:
          title: "calculationsInternal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-CALCULATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
          description: "Items to apply calculations on fields for data exploration"
        distinctResultsOnly:
          title: "Distinct results only"
          type: "boolean"
          description: "true - To get only unique results in the response,\nfalse\
            \ (Default) - To get all results ,\nIt cannot be specified when \"query\"\
            \ has \"aggregation\""
        select:
          title: "List of fields or aggregations or calculations"
          type: "array"
          description: "List of fields or aggregations to fetch in response"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        filter:
          title: "Filter configuration"
          description: "Filters to apply while fetching data"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTER.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Class for data exploration query"
    RULE-OBJ-CLASS.EMBED-AUTOMATIONRULE-ERRORDETAILS.true.PEGA_API.PZCONVERTERRORSTOJSON:
      title: "Automation ErrorDetails"
      type: "object"
      properties:
        pyMessage:
          title: "pyMessage"
          type: "string"
        pyErroneousInputOutputFieldInPage:
          title: "Erroneous Field In Input/Output Page"
          type: "string"
        pyErroneousInputOutputIdentifier:
          title: "erroneous Identifier in Input/Output"
          type: "string"
        pyErrorClassification:
          title: "pyErrorClassification"
          type: "string"
        pyLocalizedValue:
          title: "Localized Value"
          type: "string"
          readOnly: true
        pyMessageParameters:
          title: "Message Parameters"
          type: "array"
          items:
            title: "SingleValue-Text"
            type: "object"
            properties:
              pyErrorClassification:
                title: "pyErrorClassification"
                type: "string"
              pyLocalizedValue:
                title: "Localized Value"
                type: "string"
              pyErrorDetails:
                title: "Error details"
                type: "array"
                items:
                  $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-AUTOMATIONRULE-ERRORDETAILS.true.PEGA_API.PZCONVERTERRORSTOJSON"
            additionalProperties: false
            description: "SingleValue- class for Text values"
      additionalProperties: false
      description: "Container for holding the error details defined on an automation."
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTER.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Embed-DataExploration-Filter"
      type: "object"
      properties:
        filterConditionsInternal:
          title: "filter conditions internal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTERCONDITION.true.PEGA_API.PZMAPREQUESTBODY"
          description: "Filter conditions for data exploration"
        logic:
          title: "Filter logic"
          type: "string"
          description: "Filter logic to apply for filter conditions. Default  \"AND\"\
            \ will applied on filter conditions if logic is not specified. Supported:\
            \ [AND, OR]\n The expression can include parentheses.\n   For Example:\
            \ (F1 OR F2), (F1 AND F2)"
      description: "Class for data exploration filter"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-RESOURCES.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Response Resources"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
      description: "\"resource\" in DX API view response"
    SCHEMA_FILE_WEBWB_PZGETPORTAL:
      title: "GetPortalDetails"
      type: "object"
      properties:
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns details of the portal"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTER.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Embed-DataExploration-Filter"
      type: "object"
      properties:
        filterConditionsInternal:
          title: "filter conditions internal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTERCONDITION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
          description: "Filter conditions for data exploration"
        logic:
          title: "Filter logic"
          type: "string"
          description: "Filter logic to apply for filter conditions. Default  \"AND\"\
            \ will applied on filter conditions if logic is not specified. Supported:\
            \ [AND, OR]\n The expression can include parentheses.\n   For Example:\
            \ (F1 OR F2), (F1 AND F2)"
      description: "Class for data exploration filter"
    RULE-OBJ-CLASS.EMBED-DRAGDROPFILE.true.PEGA_API:
      title: "Embed-DragDropFile"
      type: "object"
      properties:
        attachmentFieldName:
          title: "Attachment field name"
          maxLength: 59
          type: "string"
        ID:
          title: "attachment id"
          type: "string"
        category:
          title: "Category"
          type: "string"
        delete:
          title: "delete"
          type: "boolean"
        name:
          title: "Name"
          maxLength: 59
          type: "string"
        type:
          title: "Type"
          type: "string"
      description: "File attached to Work"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-CASETYPE.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Case type"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        name:
          title: "Name"
          type: "string"
      description: "Class for Pega Cases API implementation."
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-CONTEXTDATA.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Response ContextData"
      type: "object"
      properties:
        content:
          title: "content"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.WORK-.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
      description: "\"ContextData\" in DX API view response"
    SCHEMA_FILE_WEBWB_PZDESCENDANTHIERARCHY:
      title: "descendant cases details for given case id"
      type: "object"
      properties:
        childCases:
          title: "list of child cases"
          type: "array"
          items:
            $ref: "#/components/schemas/childcaseitem"
          description: "holds child case items"
      description: "Object to represnt list of child case items"
    RULE-OBJ-CLASS.PEGA-API-RESPONSE-ROOT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Response Root"
      type: "object"
      properties:
        config:
          title: "config"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS..BASECLASS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        ID:
          title: "ID"
          type: "string"
        type:
          title: "type"
          type: "string"
      description: "define \"root\" in DX API view response"
    SCHEMA_FILE_WEBWB_PZFEEDRESPONSE:
      title: "GetFeed"
      type: "object"
      properties:
        data:
          title: "data"
          allOf:
          - $ref: "webwb/pzGetFeed.yaml"
        uiResources:
          title: "uiResources"
          description: "holds response ui response meta data"
          allOf:
          - $ref: "webwb/pzUIResources.yaml"
      description: "returns response info of pulse feed"
    SCHEMA_FILE_WEBWB_PZGETBULKACTIONS:
      title: "availableActions"
      type: "array"
      items:
        $ref: "#/components/schemas/AvailableAction"
      properties:
        ID:
          title: "ID"
          type: "string"
        name:
          title: "name"
          type: "string"
        type:
          title: "type"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
      description: "request body to add multiple followers"
    SCHEMA_FILE_WEBWB_PZPERFORMBULKACTIONRESPONSESCHEMA:
      title: "Response"
      type: "object"
      properties:
        successCount:
          title: "successCount"
          type: "string"
        failureCount:
          title: "failureCount"
          type: "string"
        results:
          title: "results"
          type: "array"
          items:
            $ref: "#/components/schemas/Response_86a03132-a90d-45aa-8c5d-41f7336d3938"
      description: "This represents multi-status response for bulk action process"
    SCHEMA_FILE_WEBWB_PZMOVERECORDSREQUESTSCHEMA:
      title: "moveRecordsRequest"
      type: "object"
      properties:
        sourceID:
          title: "sourceID"
          type: "string"
        destinationID:
          title: "destinationID"
          type: "string"
        context:
          title: "context"
          type: "string"
        listClass:
          title: "listClass"
          type: "string"
      description: "Move Records Request Schema"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-AGGREGATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Embed-DataExploration-Item-Aggregation"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Class for data exploration aggregation"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-PARTICIPANT.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Participants"
      type: "object"
      properties:
        city:
          title: "city"
          type: "string"
        country:
          title: "country"
          type: "string"
        email:
          title: "email"
          type: "string"
        firstName:
          title: "firstName"
          type: "string"
        fullName:
          title: "fullName"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        lastName:
          title: "lastName"
          type: "string"
        phone:
          title: "phone"
          type: "string"
        postalCode:
          title: "postalCode"
          type: "string"
        role:
          title: "role"
          type: "string"
        state:
          title: "state"
          type: "string"
      description: "This class will have properties which would be used for setting\
        \ participants field in V2 API response"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-AGGREGATION.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Embed-DataExploration-Item-Aggregation"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Class for data exploration aggregation"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API:
      title: "Pega-API-CaseManagement-Social-Message-MentionsData"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        mentionsID:
          title: "mentionsID"
          type: "string"
        name:
          title: "Name"
          type: "string"
        type:
          title: "Type"
          type: "string"
      description: "Holds mentions metadata for message record. Created for swagger\
        \ documentation"
    RULE-OBJ-CLASS..BASECLASS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "@baseclass"
      type: "object"
      description: "The 'Ultimate Base Class', from which all other classes are derived."
    RULE-OBJ-CLASS.EMBED-HATEOAS-LINK.true.PEGA_API.PZMAPMETADATARESPONSE:
      title: "Hateoas link"
      type: "object"
      properties:
        href:
          title: "Reference"
          maxLength: 256
          type: "string"
          description: "Hypertext reference to a resource or action"
        rel:
          title: "Relation"
          maxLength: 256
          type: "string"
          description: "Relation of the resource in HATEOAS to current resource"
        request_body:
          title: "Request body"
          description: "Request body for HATEOAS.\nFor example: \"dataViewParameters\"\
            : {\n\"customerID\": \"C-123\"\n}"
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        title:
          title: "Title"
          maxLength: 256
          type: "string"
          description: "Title of HATEOAS"
        type:
          title: "Type"
          maxLength: 256
          type: "string"
          description: "Http method"
      description: "Class for HATEOAS link"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API.PYGETRESPONSEFORADDPOST:
      title: "Pega-API-CaseManagement-Social-UserDetails"
      type: "object"
      properties:
        context:
          title: "Context"
          type: "string"
        contextType:
          title: "Context Type"
          type: "string"
        message:
          title: "Message"
          type: "string"
        postedTime:
          title: "Post Time"
          type: "string"
          format: "date-time"
        completeMessageKey:
          title: "completeMessageKey"
          type: "string"
          description: "Holds complete message key of the message"
        ID:
          title: "ID"
          type: "string"
        postedByUser:
          title: "postedByUser"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API.PYGETRESPONSEFORADDPOST"
        mentions:
          title: "mentions"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-MENTIONSDATA.true.PEGA_API.PYGETRESPONSEFORADDPOST"
      description: "Holds posted user details"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-USERDETAILS.true.PEGA_API:
      title: "Pega-API-CaseManagement-Social-UserDetails"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        name:
          title: "Name"
          type: "string"
        userImage:
          title: "userImage"
          type: "string"
      description: "Holds posted user details"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-SUGGESTEDTAGS.true.PEGA_API.PZSETSUGGESTEDTAGSRESPONSE:
      title: "Pega-API-CaseManagement-Social-SuggestedTags"
      type: "object"
      properties:
        suggestedTags:
          title: "suggestedTags"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-TAGS-DATA.true.PEGA_API.PZSETSUGGESTEDTAGSRESPONSE"
        recentTags:
          title: "recentTags"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-TAGS-DATA.true.PEGA_API.PZSETSUGGESTEDTAGSRESPONSE"
      description: "Holds response for suggested tags response"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Data exploration query"
      type: "object"
      properties:
        aggregationsInternal:
          title: "aggregations"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-AGGREGATION.true.PEGA_API.PZMAPREQUESTBODY"
          description: "Items to aggregate data for data exploration"
        calculationsInternal:
          title: "calculationsInternal"
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-CALCULATION.true.PEGA_API.PZMAPREQUESTBODY"
          description: "Items to apply calculations on fields for data exploration"
        distinctResultsOnly:
          title: "Distinct results only"
          type: "boolean"
          description: "true - To get only unique results in the response,\nfalse\
            \ (Default) - To get all results ,\nIt cannot be specified when \"query\"\
            \ has \"aggregation\""
        select:
          title: "List of fields or aggregations or calculations"
          type: "array"
          description: "List of fields or aggregations to fetch in response"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM.true.PEGA_API.PZMAPREQUESTBODY"
        sortBy:
          title: "Sorting configuration"
          type: "array"
          description: "List of fields to sort. Sorting order is determined by the\
            \ order of fields specified here."
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-SORT.true.PEGA_API.PZMAPREQUESTBODY"
        filter:
          title: "Filter configuration"
          description: "Filters to apply while fetching data"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-FILTER.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Class for data exploration query"
    SCHEMA_FILE_WEBWB_PZMULTISTATUSRESPONSESCHEMA:
      title: "Response"
      type: "object"
      properties:
        results:
          title: "results"
          type: "array"
          items:
            $ref: "#/components/schemas/Response_52887a08-1d2e-4e2c-afc4-becd629576e3"
      description: "This represents multi-status response for bulk requests"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-ITEM-CALCULATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Embed-DataExploration-Item-Calculation"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Class for data exploration calculations"
    RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-LIKE.true.PEGA_API.PZGETLIKESJSONRESPONSE:
      title: "Like"
      type: "object"
      properties:
        users:
          title: "users"
          type: "array"
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.PEGA-API-CASEMANAGEMENT-SOCIAL-MESSAGE-LIKE-LIKESDATA.true.PEGA_API.PZGETLIKESJSONRESPONSE"
      description: "Class for likes api"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Embed-DataExploration-Pagination"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Class for data exploration pagination"
    RULE-OBJ-CLASS.PEGA-API-DATAEXPLORATION-REQUEST-COUNT.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY:
      title: "Data view result count request"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPRESULTCOUNTREQUESTBODY"
      description: "Data view result count end point Request schema"
    RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY:
      title: "Embed-DataExploration-Pagination"
      type: "object"
      properties:
        dataViewParameters:
          title: "Dataview parameters"
          description: "Dataview parameters can be provided in name-value pairs.\n\
            For example: \"CustomerID\" : \"C-123\""
          allOf:
          - $ref: "#/components/schemas/_unknown_object"
        paging:
          title: "Paging configuration"
          description: "Paging settings to apply while fetching results. \"pageNumber\"\
            \ or \"pageSize\" cannot be specified when \"maxResultsToFetch\" is specified\
            \ in \"paging\"  or \"aggregation\" is specified in \"query\""
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-PAGINATION.true.PEGA_API.PZMAPREQUESTBODY"
        useExtendedTimeout:
          title: "Use Extended Timeout"
          type: "boolean"
          description: "This timeout is applicable for Queryable and Non-Queryable\
            \ Data Pages. It can be used when source is failing with default timeout."
        query:
          title: "Query configuration"
          description: "Query settings configuration"
          allOf:
          - $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-DATAEXPLORATION-QUERY.true.PEGA_API.PZMAPREQUESTBODY"
      description: "Class for data exploration pagination"
    RULE-OBJ-CLASS.CODE-AUTOMATION-ERRORS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON:
      title: "Automation Errors"
      type: "object"
      properties:
        errorClassification:
          title: "Error classification"
          type: "string"
          readOnly: true
        errorDetails:
          title: "Error details"
          type: "array"
          readOnly: true
          items:
            $ref: "#/components/schemas/RULE-OBJ-CLASS.EMBED-AUTOMATIONRULE-ERRORDETAILS.true.PEGA_API.PZTRANSLATEVIEWPAGETOJSON"
        localizedValue:
          title: "Localized Value"
          type: "string"
          readOnly: true
      additionalProperties: false
      description: "This class represents error messages that can be handled by an\
        \ Automation rule."
    process:
      title: "Process"
      type: "object"
      properties:
        completedBy:
          type: "string"
        completedTime:
          type: "string"
        ID:
          type: "string"
        visited_status:
          type: "string"
        startTime:
          type: "string"
        startedBy:
          type: "string"
        name:
          type: "string"
        sla:
          $ref: "#/components/schemas/sla"
        steps:
          type: "array"
          items:
            type: "object"
            properties:
              ID:
                type: "string"
              visited_status:
                type: "string"
              name:
                type: "string"
              sla:
                $ref: "#/components/schemas/sla"
    AvailableAction:
      title: "availableAction"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        name:
          title: "name"
          type: "string"
        type:
          title: "type"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
    User:
      title: "user"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
    Response_86a03132-a90d-45aa-8c5d-41f7336d3938:
      title: "Response"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        status:
          title: "status"
          type: "string"
        error:
          title: "Error"
          type: "object"
          allOf:
          - $ref: "webwb/pzErrorResponseSchema.yaml"
      additionalProperties: false
      description: "This represents schema for each multi-status response"
    sla:
      title: "SLA"
      type: "object"
      properties:
        goal:
          type: "string"
        deadline:
          type: "string"
    content:
      title: "content"
      type: "object"
      allOf:
      - $ref: ""
      description: "holds case data"
    Case:
      title: "case"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
    Response:
      title: "Response"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        status:
          title: "status"
          type: "string"
        error:
          title: "Error"
          type: "object"
          allOf:
          - $ref: "webwb/pzErrorResponseSchema.yaml"
      additionalProperties: false
      description: "This represents schema for each multi-status response"
    participant_role:
      title: "participant"
      type: "object"
      properties:
        Name:
          title: "Name"
          type: "string"
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
      description: "holds participant roles info of the case"
    childcaseitem:
      title: "Specific child case item"
      allOf:
      - $ref: "webwb/pzCaseAssignmentInfoWithLinks.yaml"
      - type: "object"
        properties:
          childCases:
            title: "child cases details for associated parent"
            type: "array"
            items:
              type: "object"
              properties:
                assignments:
                  title: "assignments"
                  type: "array"
                  items:
                    $ref: ""
                  description: "holds list of assignemnts"
                childCases:
                  title: "child case details"
                  type: "array"
                  items:
                    $ref: ""
                ID:
                  title: "ID"
                  type: "string"
                name:
                  title: "name"
                  type: "string"
                links:
                  title: "links"
                  description: "holds HATEOAS links"
                  allOf:
                  - $ref: "webwb/pzLinks.yaml"
            example:
            - assignments:
              - assigneeInfo:
                  name: "anilramini"
                  ID: "anilr"
                  type: "worklist"
                instructions: ""
                urgency: "10"
                processID: "Create_Flow_1"
                name: "Create (1)"
                context: ""
                canPerform: "true"
                links:
                  open:
                    rel: "self"
                    href: "/assignments/ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK C-490001!CREATE_FLOW_1"
                    type: "GET"
                    title: "Get assignment details"
                ID: "ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK C-490001!CREATE_FLOW_1"
                actions:
                - name: "Create (1)"
                  links:
                    save:
                      rel: "self"
                      href: "/assignments/ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK C-490001!CREATE_FLOW_1/actions/ActionStubDraftMode/save"
                      type: "PATCH"
                      title: "Save assignment action "
                    open:
                      rel: "self"
                      href: "/assignments/ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK C-490001!CREATE_FLOW_1/actions/ActionStubDraftMode"
                      type: "GET"
                      title: "Get assignment action details"
                  ID: "ActionStubDraftMode"
                  type: "FlowAction"
              childCases:
              - assignments:
                - assigneeInfo:
                    name: "anilramini"
                    ID: "anilr"
                    type: "worklist"
                  instructions: ""
                  urgency: "10"
                  processID: "CreateForm_Default"
                  name: "Create"
                  context: ""
                  canPerform: "true"
                  links:
                    open:
                      rel: "self"
                      href: "/assignments/ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK D-350001!CREATEFORM_DEFAULT"
                      type: "GET"
                      title: "Get assignment details"
                  ID: "ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK D-350001!CREATEFORM_DEFAULT"
                  actions:
                  - name: "Create"
                    links:
                      save:
                        rel: "self"
                        href: "/assignments/ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK D-350001!CREATEFORM_DEFAULT/actions/Create/save"
                        type: "PATCH"
                        title: "Save assignment action "
                      open:
                        rel: "self"
                        href: "/assignments/ASSIGN-WORKLIST OAEE9U-FLIPKART-WORK D-350001!CREATEFORM_DEFAULT/actions/Create"
                        type: "GET"
                        title: "Get assignment action details"
                    ID: "Create"
                    type: "FlowAction"
                links:
                  open:
                    rel: "self"
                    href: "/cases/OAEE9U-FLIPKART-WORK D-350001"
                    type: "GET"
                    title: "Open child case"
                ID: "OAEE9U-FLIPKART-WORK D-350001"
                Name: "DescChild"
              links:
                open:
                  rel: "self"
                  href: "/cases/OAEE9U-FLIPKART-WORK C-490001"
                  type: "GET"
                  title: "Open child case"
              ID: "OAEE9U-FLIPKART-WORK C-490001"
              Name: "ChildCT"
            description: "List of child case items for associated parent"
    stages:
      title: "Stages"
      type: "object"
      description: "holds stages info"
      properties:
        ID:
          type: "string"
        name:
          type: "string"
        visited_status:
          type: "string"
        entryTime:
          type: "string"
        transitionType:
          type: "string"
        type:
          type: "string"
        sla:
          $ref: "#/components/schemas/sla"
        links:
          title: "Links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
        optionalProcesses:
          type: "array"
          items:
            $ref: "#/components/schemas/process"
        processSequences:
          type: "array"
          items:
            type: "object"
            properties:
              processes:
                type: "array"
                items:
                  $ref: "#/components/schemas/process"
    relatedCases:
      title: "relatedCases"
      type: "object"
      properties:
        caseTypeID:
          title: "caseTypeID"
          type: "string"
        createdBy:
          title: "createdBy"
          type: "string"
        name:
          title: "name"
          type: "string"
        caseTypeLabel:
          title: "caseTypeLabel"
          type: "string"
        createTime:
          title: "createTime"
          type: "string"
          format: "date-time"
        ID:
          title: "ID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
      description: "holds reated cases data with hateos links."
    Response_52887a08-1d2e-4e2c-afc4-becd629576e3:
      title: "Response"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        status:
          title: "status"
          type: "string"
        error:
          title: "Error"
          type: "object"
          allOf:
          - $ref: "webwb/pzErrorResponseSchema.yaml"
      additionalProperties: false
      description: "This represents schema for each entry in multi-status response"
    recents:
      title: "recents"
      type: "object"
      properties:
        resourceType:
          title: "resourceType"
          type: "string"
        name:
          title: "name"
          type: "string"
        resourceKey:
          title: "resourceKey"
          type: "string"
        resourceID:
          title: "resourceID"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
    participant_view_details:
      title: "content"
      type: "object"
      properties:
        classID:
          title: "classID"
          type: "string"
        pyFirstName:
          title: "pyFirstName"
          type: "string"
        pyLastName:
          title: "pyLastName"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
      description: "holds participant roles info of the case"
    Tag:
      title: "Tag"
      type: "object"
      properties:
        Name:
          title: "Name"
          type: "string"
    Case_c034e30a-553f-41aa-9a0f-c3814984422a:
      title: "case"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
    ancestors:
      title: "ancestors"
      type: "object"
      properties:
        ID:
          title: "ID"
          type: "string"
        name:
          title: "name"
          type: "string"
        links:
          title: "links"
          description: "holds HATEOAS links"
          allOf:
          - $ref: "webwb/pzLinks.yaml"
    caseInfo:
      title: "caseInfo"
      type: "object"
      properties:
        content:
          title: "content"
          type: "object"
          allOf:
          - $ref: "#/components/schemas/content"
          description: "holds case and any other pages info"
  securitySchemes:
    Passwtord:
      type: "oauth2"
      flows:
        password:
          tokenUrl: "https://pega.acme.local/prweb/api/oauth2/v1/token"
          refreshUrl: "https://pega.acme.local/prweb/api/oauth2/v1/token"
    ClientCredentials:
      type: "oauth2"
      flows:
        clientCredentials:
          tokenUrl: "https://pega.acme.local/prweb/api/oauth2/v1/token"
          refreshUrl: "https://pega.acme.local/prweb/api/oauth2/v1/token"
    AuthCode:
      type: "oauth2"
      flows:
        authorizationCode:
          authorizationUrl: "https://pega.acme.local/prweb/api/oauth2/v1/authorize"
          tokenUrl: "https://pega.acme.local/prweb/api/oauth2/v1/token"
          refreshUrl: "https://pega.acme.local/prweb/api/oauth2/v1/token"
